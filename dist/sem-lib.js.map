{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 43d528ebe5ee79de9f31","webpack:///./lib/SortedSet/RedBlackTreeNode.js","webpack:///./lib/isNumeric.js","webpack:///./lib/toInteger.js","webpack:///./lib/sem-lib.js","webpack:///(webpack)/buildin/global.js","webpack:///./lib/SortedSet/AbstractSortedSet.js","webpack:///./lib/SortedSet/RedBlackTreeStrategy.js","webpack:///./lib/SortedSet/AbstractBinaryTreeStrategy.js","webpack:///./lib/SortedSet/BinaryTreeIterator.js","webpack:///./lib/SortedSet/BinaryTreeNode.js","webpack:///./lib/iterator.js","webpack:///./lib/Inwaiting.js"],"names":["BinaryTreeNode","require","module","exports","value","parent","isRed","isNumeric","obj","undefined","Array","isArray","parsed","parseFloat","toInteger","num","positive","_default","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","parseInt","AbstractSortedSet","RedBlackTreeStrategy","createIterator","Inwaiting","isObject","idComparator","a","b","id","priorityComparator","priority","hasProp","Object","hasOwnProperty","globalCounter","SortedSet","comparator","priv","node","root","cmp","left","right","Semaphore","capacity","isFull","sync","_queue","strategy","_capacity","_numTokens","prototype","getNumTokens","getCapacity","setCapacity","semGive","overflow","destroyed","_semTake","semFlush","forEach","group","stack","item","handleTimeout","onTimeOut","taken","_removeItem","_setImmediate","semTake","options","result","hasOptions","task","timeOut","onTake","Function","addCounter","bind","cancel","setPriority","_insertItem","timer","setTimeout","_shouldTakeToken","shouldTakeToken","_hasMissingToken","hasMissingToken","_nextGroupItem","groupIterator","itemIterator","beginIterator","Math","min","next","topSync","_taking","keepAlive","_keepAlive","_checkKeepAlive","_destroyWaiting","weakerIterator","weakeGroup","weakerItemIterator","weakerItem","unfair","length","endIterator","previous","_runTask","onCancel","hasNext","call","timerID","_clearImmediate","destroy","safe","onDestroy","_destroying","__onDestroy","_destroy","i","_len","j","_jlen","schedule","collection","iteratee","callback","arguments","iterator","cancellers","errors","items","waiting","canceled","done","nextItem","push","scheduled","give","err","key","icancel","abort","Error","code","_item","Proxy","get","target","prop","receiver","Reflect","_insertGroup","insert","_hasInWaitingTask","clearTimeout","isAlive","Boolean","hasInWaitingTask","_countInWaitingTokens","count","_this","remove","allowNode","global","setImmediate","fn","clearImmediate","assign","semCreate","args","g","eval","e","window","contains","toArray","thisArg","forEachImpl","ret","index","self","findIterator","AbstractBinaryTreeStrategy","RedBlackTreeNode","rotateLeft","tmp","rotateRight","colorFlip","moveRedLeft","moveRedRight","insertInNode","compare","findMinNode","fixUp","removeMinNode","removeFromNode","BinaryTreeIterator","binaryTreeTraverse","some","pos","allowSetValue","sortedSet","find","descendAllTheWay","leftOrRight","moveCursor","rightOrLeft","tree","nextNode","createArrayIterator","arr","len","createObjectIterator","keys","createIterableIterator","iterable","Symbol","semID","semaphore","nextNum","nextPriority"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA;;;;;;;;;;;;;;;;;;;;;;;AC7DA,IAAMA,cAAc,GAAGC,mBAAO,CAAC,CAAD,CAA9B,C,CAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACI,4BAAYC,KAAZ,EAAkC;AAAA;;AAAA,QAAfC,MAAe,uEAAN,IAAM;;AAAA;;AAC9B,8BAAMD,KAAN,EAAaC,MAAb;AACA,UAAKC,KAAL,GAAa,IAAb,CAF8B,CAEX;;AAFW;AAGjC;;AAJL;AAAA,EAAgDN,cAAhD,E;;;;;;ACNA,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAAAC,GAAG,EAAI;AACrB,MAAIA,GAAG,KAAKC,SAAR,IAAqBD,GAAG,KAAK,IAA7B,IAAqCE,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAzC,EAA6D;AACzD,WAAO,KAAP;AACH;;AAED,MAAMI,MAAM,GAAGC,UAAU,CAACL,GAAD,CAAzB;;AACA,MAAIA,GAAG,KAAKI,MAAZ,EAAoB;AAChB,WAAO,IAAP;AACH;;AAED,SAAOJ,GAAG,GAAGI,MAAN,GAAe,CAAf,IAAoB,CAA3B;AACH,CAXD;;AAaAV,MAAM,CAACC,OAAP,GAAiBI,SAAjB,C;;;;;;ACbA,IAAMA,SAAS,GAAGN,mBAAO,CAAC,CAAD,CAAzB;AAEA;;;;;;;;AAMA,IAAMa,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,QAAN,EAAgBC,QAAhB,EAA6B;AAC3C,MAAI,CAACV,SAAS,CAACQ,GAAD,CAAd,EAAqB;AACjB,WAAOE,QAAP;AACH;;AAED,MAAIF,GAAG,KAAKG,MAAM,CAACC,iBAAnB,EAAsC;AAClC,WAAOJ,GAAP;AACH;;AAED,MAAIA,GAAG,KAAKG,MAAM,CAACE,iBAAnB,EAAsC;AAClC,WAAOJ,QAAQ,GAAGC,QAAH,GAAcF,GAA7B;AACH;;AAEDA,KAAG,GAAGM,QAAQ,CAACN,GAAD,EAAM,EAAN,CAAd;AAEA,SAAOC,QAAQ,IAAID,GAAG,GAAG,CAAlB,GAAsBE,QAAtB,GAAiCF,GAAxC;AACH,CAhBD;;AAkBAb,MAAM,CAACC,OAAP,GAAiBW,SAAjB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA,IAAMQ,iBAAiB,GAAGrB,mBAAO,CAAC,CAAD,CAAjC;;AACA,IAAMsB,oBAAoB,GAAGtB,mBAAO,CAAC,CAAD,CAApC;;AACA,IAAMuB,cAAc,GAAGvB,mBAAO,CAAC,EAAD,CAA9B;;AACA,IAAMM,SAAS,GAAGN,mBAAO,CAAC,CAAD,CAAzB;;AACA,IAAMa,SAAS,GAAGb,mBAAO,CAAC,CAAD,CAAzB;;AACA,IAAMwB,SAAS,GAAGxB,mBAAO,CAAC,EAAD,CAAzB;;AAEA,IAAMyB,QAAQ,GAAG,SAAXA,QAAW,CAAAlB,GAAG,EAAI;AACpB,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAA1C;AACH,CAFD;;AAIA,IAAMmB,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAIC,CAAJ,EAAU;AAC3B,SAAOD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAT,GAAc,CAAd,GAAkBF,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAT,GAAc,CAAC,CAAf,GAAmB,CAA5C;AACH,CAFD;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACH,CAAD,EAAIC,CAAJ,EAAU;AACjC,SAAOD,CAAC,CAACI,QAAF,GAAaH,CAAC,CAACG,QAAf,GAA0B,CAA1B,GAA8BJ,CAAC,CAACI,QAAF,GAAaH,CAAC,CAACG,QAAf,GAA0B,CAAC,CAA3B,GAA+B,CAApE;AACH,CAFD;;AAIA,IAAMC,OAAO,GAAGC,MAAM,CAACC,cAAvB,C,CAEA;;AACA,IAAIC,aAAa,GAAG,CAApB;;IAEMC,S;;;;;;;;;;;;;wBACEjC,K,EAAO;AAAA,UACAkC,UADA,GACc,KAAKC,IADnB,CACAD,UADA;AAAA,UAEIE,IAFJ,GAEY,KAAKD,IAFjB,CAEFE,IAFE;AAGP,UAAIC,GAAJ;;AAEA,aAAOF,IAAI,KAAK,IAAhB,EAAsB;AAClBE,WAAG,GAAGJ,UAAU,CAAClC,KAAD,EAAQoC,IAAI,CAACpC,KAAb,CAAhB;;AACA,YAAIsC,GAAG,KAAK,CAAZ,EAAe;AACX;AACH,SAFD,MAEO,IAAIA,GAAG,GAAG,CAAV,EAAa;AAChBF,cAAI,GAAGA,IAAI,CAACG,IAAZ;AACH,SAFM,MAEA;AACHH,cAAI,GAAGA,IAAI,CAACI,KAAZ;AACH;AACJ;;AAED,aAAOJ,IAAI,KAAK,IAAT,GAAgB/B,SAAhB,GAA4B+B,IAAI,CAACpC,KAAxC;AACH;;;;EAlBmBkB,iB;AAqBxB;;;;;;;;AAMA,SAASuB,SAAT,CAAmBC,QAAnB,EAA6BC,MAA7B,EAAqCf,QAArC,EAA6D;AAAA,MAAdgB,IAAc,uEAAP,KAAO;;AACzD,MAAMC,MAAM,GAAG,IAAIZ,SAAJ,CAAc;AACzBC,cAAU,EAAEP,kBADa;AAEzBmB,YAAQ,EAAE3B;AAFe,GAAd,CAAf;;AAKA,OAAKO,EAAL,GAAU,EAAEM,aAAZ;AACA,OAAKe,SAAL,GAAiBrC,SAAS,CAACgC,QAAD,EAAW,IAAX,EAAiB,CAAjB,CAA1B;AACA,OAAKG,MAAL,GAAcA,MAAd;AACA,OAAKG,UAAL,GAAkBL,MAAM,GAAG,KAAKI,SAAR,GAAoB,CAA5C,CATyD,CAUzD;;AACA,OAAKnB,QAAL,GAAgBlB,SAAS,CAACkB,QAAD,EAAW,KAAX,EAAkB,EAAlB,CAAzB;AACA,OAAKgB,IAAL,GAAYA,IAAZ;AACH;AAED;;;;;;AAIAH,SAAS,CAACQ,SAAV,CAAoBC,YAApB,GAAmC,SAASA,YAAT,GAAwB;AACvD,SAAO,KAAKF,UAAZ;AACH,CAFD;AAIA;;;;;;AAIAP,SAAS,CAACQ,SAAV,CAAoBE,WAApB,GAAkC,SAASA,WAAT,GAAuB;AACrD,SAAO,KAAKJ,SAAZ;AACH,CAFD;AAIA;;;;;;AAIAN,SAAS,CAACQ,SAAV,CAAoBG,WAApB,GAAkC,SAASA,WAAT,CAAqBV,QAArB,EAA+B;AAC7D,OAAKK,SAAL,GAAiBrC,SAAS,CAACgC,QAAD,EAAW,IAAX,EAAiB,KAAKK,SAAtB,CAA1B;AACH,CAFD;AAIA;;;;;;;;AAMAN,SAAS,CAACQ,SAAV,CAAoBI,OAApB,GAA8B,SAASA,OAAT,CAAiB1C,GAAjB,EAAsB2C,QAAtB,EAAgC;AAC1D,MAAI,KAAKC,SAAT,EAAoB;AAChB,WAAO,KAAP;AACH;;AAED,MAAI5C,GAAG,KAAKG,MAAM,CAACC,iBAAnB,EAAsC;AAClCJ,OAAG,GAAGD,SAAS,CAACC,GAAD,EAAM,IAAN,EAAY,CAAZ,CAAf;;AACA,QAAIA,GAAG,GAAG,CAAV,EAAa;AACTA,SAAG,GAAG,CAAN;AACH;;AACD,SAAKqC,UAAL,IAAmBrC,GAAnB;AACH,GAND,MAMO;AACH,SAAKqC,UAAL,GAAkBrC,GAAlB;AACH;;AAED,MAAI,CAAC2C,QAAD,IAAa,KAAKN,UAAL,GAAkB,KAAKD,SAAxC,EAAmD;AAC/C,SAAKC,UAAL,GAAkB,KAAKD,SAAvB;AACH;;AAED,OAAKS,QAAL,CAAcF,QAAd;;AAEA,MAAIA,QAAQ,IAAI,KAAKN,UAAL,GAAkB,KAAKD,SAAvC,EAAkD;AAC9C,SAAKC,UAAL,GAAkB,KAAKD,SAAvB;AACH;;AAED,SAAO,IAAP;AACH,CA1BD;AA4BA;;;;;AAGAN,SAAS,CAACQ,SAAV,CAAoBQ,QAApB,GAA+B,SAASA,QAAT,GAAoB;AAC/C,MAAI,KAAKF,SAAT,EAAoB;AAChB,WAAO,KAAP;AACH;;AAED,OAAKP,UAAL,GAAkB,CAAlB;;AACA,OAAKH,MAAL,CAAYa,OAAZ,CAAoB,UAAAC,KAAK,EAAI;AACzBA,SAAK,CAACC,KAAN,CAAYF,OAAZ,CAAoB,UAAAG,IAAI,EAAI;AACxBA,UAAI,CAAClD,GAAL,GAAW,CAAX;AACH,KAFD;AAGH,GAJD;;AAKA,OAAK6C,QAAL;;AACA,SAAO,IAAP;AACH,CAbD;;AAeAf,SAAS,CAACQ,SAAV,CAAoBa,aAApB,GAAoC,SAASA,aAAT,CAAuBD,IAAvB,EAA6B;AAAA;;AAAA,MACtDE,SADsD,GAClCF,IADkC,CACtDE,SADsD;AAAA,MAC3CC,KAD2C,GAClCH,IADkC,CAC3CG,KAD2C;;AAE7D,OAAKC,WAAL,CAAiBJ,IAAjB;;AAEA,MAAIG,KAAK,KAAK,CAAd,EAAiB;AACb;AACA,SAAKE,aAAL,CAAmB,YAAM;AACrB,YAAI,CAACb,OAAL,CAAaW,KAAb,EAAoB,IAApB;AACH,KAFD;AAGH;;AAED,MAAI,OAAOD,SAAP,KAAqB,UAAzB,EAAqC;AACjCA,aAAS;AACZ;AACJ,CAdD;AAgBA;;;;;;;;;;;;;;;;;;AAgBAtB,SAAS,CAACQ,SAAV,CAAoBkB,OAApB,GAA8B,SAASA,OAAT,CAAiBC,OAAjB,EAA0BC,MAA1B,EAAkC;AAC5D,MAAI,KAAKd,SAAT,EAAoB;AAChB,WAAO,KAAP;AACH;;AAED,MAAMe,UAAU,GAAGhD,QAAQ,CAAC8C,OAAD,CAA3B;AACA,MAAIG,IAAJ,EAAUC,OAAV,EAAmB7D,GAAnB,EAAwBiB,QAAxB;;AAEA,MAAI0C,UAAJ,EAAgB;AACZC,QAAI,GAAGH,OAAO,CAACK,MAAf;AACA7C,YAAQ,GAAGwC,OAAO,CAACxC,QAAnB;AACAjB,OAAG,GAAGyD,OAAO,CAACzD,GAAd;AACA6D,WAAO,GAAGJ,OAAO,CAACI,OAAlB;AACH,GALD,MAKO,IAAI,OAAOJ,OAAP,KAAmB,UAAvB,EAAmC;AACtCG,QAAI,GAAGH,OAAP;AACAA,WAAO,GAAG,IAAV;AACH;;AAED,MAAI,OAAOG,IAAP,KAAgB,UAApB,EAAgC;AAC5BA,QAAI,GAAGG,QAAQ,CAACzB,SAAhB;AACH;;AAEDtC,KAAG,GAAGD,SAAS,CAACC,GAAD,EAAM,IAAN,EAAY,CAAZ,CAAf;AACAiB,UAAQ,GAAGlB,SAAS,CAACkB,QAAD,EAAW,KAAX,EAAkB,KAAKA,QAAvB,CAApB;AAEA,MAAMiC,IAAI,GAAG,IAAIxC,SAAJ,CAAc,IAAd,EAAoBkD,IAApB,EAA0B3C,QAA1B,EAAoCjB,GAApC,EAAyC2D,UAAU,GAAGF,OAAH,GAAa,KAAhE,CAAb;;AAEA,MAAI,OAAOC,MAAP,KAAkB,UAAtB,EAAkC;AAC9BA,UAAM,CAACR,IAAD,CAAN;AACH,GAFD,MAEO,IAAIvC,QAAQ,CAAC+C,MAAD,CAAZ,EAAsB;AACzBA,UAAM,CAACM,UAAP,GAAoBd,IAAI,CAACc,UAAL,CAAgBC,IAAhB,CAAqBf,IAArB,CAApB;AACAQ,UAAM,CAACQ,MAAP,GAAgBhB,IAAI,CAACgB,MAAL,CAAYD,IAAZ,CAAiBf,IAAjB,CAAhB;AACAQ,UAAM,CAACS,WAAP,GAAqBjB,IAAI,CAACiB,WAAL,CAAiBF,IAAjB,CAAsBf,IAAtB,CAArB;AACH;;AAED,OAAKkB,WAAL,CAAiBlB,IAAjB;;AAEA,MAAI1D,SAAS,CAACqE,OAAD,CAAT,IAAsBA,OAAO,GAAG,CAApC,EAAuC;AACnCX,QAAI,CAACmB,KAAL,GAAaC,UAAU,CAAC,KAAKnB,aAAL,CAAmBc,IAAnB,CAAwB,IAAxB,EAA8Bf,IAA9B,CAAD,EAAsCW,OAAtC,CAAvB;AACH;;AAED,OAAKhB,QAAL;;AACA,SAAOK,IAAP;AACH,CA3CD;;AA6CApB,SAAS,CAACQ,SAAV,CAAoBiC,gBAApB,GAAuC,SAASA,gBAAT,CAA0BrB,IAA1B,EAAgClD,GAAhC,EAAqC;AACxE;AACA,SAAO,OAAOkD,IAAI,CAACsB,eAAZ,KAAgC,UAAhC,IAA8C,CAAC,GAAGtB,IAAI,CAACsB,eAAT,EAA0BxE,GAA1B,EAA+BkD,IAAI,CAAClD,GAApC,EAAyCkD,IAAI,CAACG,KAA9C,EAAqD,IAArD,CAArD;AACH,CAHD;;AAKAvB,SAAS,CAACQ,SAAV,CAAoBmC,gBAApB,GAAuC,SAASA,gBAAT,CAA0BvB,IAA1B,EAAgC;AACnE,MAAI,OAAOA,IAAI,CAACwB,eAAZ,KAAgC,UAApC,EAAgD;AAC5C;AACA,KAAC,GAAGxB,IAAI,CAACwB,eAAT,EAA0B,IAA1B;AACH;AACJ,CALD;;AAOA5C,SAAS,CAACQ,SAAV,CAAoBqC,cAApB,GAAqC,SAASA,cAAT,GAA0B;AAC3D,MAAIC,aAAJ,EAAmB5B,KAAnB,EAA0B6B,YAA1B,EAAwC3B,IAAxC;AAEA0B,eAAa,GAAG,KAAK1C,MAAL,CAAY4C,aAAZ,EAAhB;AACA9B,OAAK,GAAG4B,aAAa,CAACvF,KAAd,EAAR;AAEAwF,cAAY,GAAG7B,KAAK,CAACC,KAAN,CAAY6B,aAAZ,EAAf;AACA5B,MAAI,GAAG2B,YAAY,CAACxF,KAAb,EAAP;;AAEA,SAAO6D,IAAI,IAAIA,IAAI,CAAClD,GAAL,KAAa,CAArB,IAA0B,CAAC,KAAKuE,gBAAL,CAAsBrB,IAAtB,EAA4B6B,IAAI,CAACC,GAAL,CAAS9B,IAAI,CAAClD,GAAd,EAAmB,KAAKqC,UAAxB,CAA5B,CAAlC,EAAoG;AAChGa,QAAI,GAAG,IAAP;AAEA2B,gBAAY,GAAGA,YAAY,CAACI,IAAb,EAAf;;AAEA,QAAIJ,YAAY,KAAK,IAArB,EAA2B;AACvBD,mBAAa,GAAGA,aAAa,CAACK,IAAd,EAAhB;;AAEA,UAAIL,aAAa,KAAK,IAAtB,EAA4B;AACxB5B,aAAK,GAAG,IAAR;AACA;AACH;;AAED6B,kBAAY,GAAG7B,KAAK,CAACC,KAAN,CAAY6B,aAAZ,EAAf;AACH;;AAED5B,QAAI,GAAG2B,YAAY,CAACxF,KAAb,EAAP;AACH;;AAED,SAAO,CAAC2D,KAAD,EAAQE,IAAR,CAAP;AACH,CA7BD;AA+BA;;;;;;AAIApB,SAAS,CAACQ,SAAV,CAAoBO,QAApB,GAA+B,SAASA,QAAT,CAAkBqC,OAAlB,EAA2B;AACtD,MAAI,KAAKC,OAAT,EAAkB;AACd;AACH;;AAED,MAAI,OAAO,KAAKC,SAAZ,KAA0B,WAA9B,EAA2C;AACvC,SAAKC,UAAL;AACH;;AAED,OAAKF,OAAL,GAAe,IAAf;;AACA,SAAO,KAAKG,eAAL,CAAqB,KAAKC,eAA1B,CAAP,EAAmD;AAAA,+BACzB,KAAKZ,cAAL,EADyB;AAAA;AAAA,QACxC3B,KADwC;AAAA,QACjCE,IADiC;;AAE/C,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AACd;AACH;;AAED,QAAIsC,cAAc,SAAlB;AAAA,QAAoBC,UAAU,SAA9B;AAAA,QAAgCC,kBAAkB,SAAlD;AAAA,QAAoDC,UAAU,SAA9D,CAN+C,CAQ/C;;AACA,QAAIzC,IAAI,CAAClD,GAAL,GAAW,KAAKqC,UAApB,EAAgC;AAC5Ba,UAAI,CAACG,KAAL,IAAc,KAAKhB,UAAnB;AACAa,UAAI,CAAClD,GAAL,IAAY,KAAKqC,UAAjB;AACA,WAAKA,UAAL,GAAkB,CAAlB,CAH4B,CAK5B;;AACA,UAAIa,IAAI,CAAC0C,MAAL,IAAe,KAAK1D,MAAL,CAAY2D,MAAZ,KAAuB,CAA1C,EAA6C;AACzCL,sBAAc,GAAG,KAAKtD,MAAL,CAAY4D,WAAZ,GAA0BC,QAA1B,EAAjB;;AAEA,eAAOP,cAAc,IAAItC,IAAI,CAAClD,GAAL,KAAa,CAAtC,EAAyC;AACrCyF,oBAAU,GAAGD,cAAc,CAACnG,KAAf,EAAb;;AACA,cAAIoG,UAAU,KAAKzC,KAAf,IAAwByC,UAAU,CAACxE,QAAX,IAAuB,KAAKA,QAAxD,EAAkE;AAC9D;AACA;AACH;;AAEDyE,4BAAkB,GAAGD,UAAU,CAACxC,KAAX,CAAiB6C,WAAjB,GAA+BC,QAA/B,EAArB;AACAJ,oBAAU,GAAGD,kBAAkB,GAAGA,kBAAkB,CAACrG,KAAnB,EAAH,GAAgC,IAA/D;;AAEA,iBAAOsG,UAAU,IAAIzC,IAAI,CAAClD,GAAL,KAAa,CAAlC,EAAqC;AACjC,gBAAI2F,UAAU,CAACtC,KAAX,GAAmB,CAAnB,IAAwB,KAAKkB,gBAAL,CAAsBrB,IAAtB,EAA4B6B,IAAI,CAACC,GAAL,CAAS9B,IAAI,CAAClD,GAAd,EAAmB2F,UAAU,CAACtC,KAA9B,CAA5B,CAA5B,EAA+F;AAC3F,kBAAMA,KAAK,GAAGH,IAAI,CAAClD,GAAL,GAAW2F,UAAU,CAACtC,KAAtB,GAA8BsC,UAAU,CAACtC,KAAzC,GAAiDH,IAAI,CAAClD,GAApE;AACAkD,kBAAI,CAACG,KAAL,IAAcA,KAAd;AACAH,kBAAI,CAAClD,GAAL,IAAYqD,KAAZ;AACAsC,wBAAU,CAAC3F,GAAX,IAAkBqD,KAAlB;AACAsC,wBAAU,CAACtC,KAAX,IAAoBA,KAApB;AACH;;AAEDqC,8BAAkB,GAAGA,kBAAkB,CAACK,QAAnB,EAArB;AACAJ,sBAAU,GAAGD,kBAAkB,GAAGA,kBAAkB,CAACrG,KAAnB,EAAH,GAAgC,IAA/D;AACH;;AAED,cAAI6D,IAAI,CAAClD,GAAL,KAAa,CAAjB,EAAoB;AAChB;AACH;;AAEDwF,wBAAc,GAAGA,cAAc,GAAGA,cAAc,CAACO,QAAf,EAAH,GAA+B,IAA9D;AACH;AACJ,OAtC2B,CAwC5B;;;AACA,UAAI7C,IAAI,CAAClD,GAAL,KAAa,CAAjB,EAAoB;AAChB,aAAKyE,gBAAL,CAAsBvB,IAAtB;;AACA;AACH;AACJ;;AAED,QAAIA,IAAI,CAAClD,GAAL,KAAa,CAAjB,EAAoB;AAChBkD,UAAI,CAACG,KAAL,IAAcH,IAAI,CAAClD,GAAnB;;AACA,UAAI,KAAKqC,UAAL,KAAoBlC,MAAM,CAACC,iBAA/B,EAAkD;AAC9C,aAAKiC,UAAL,IAAmBa,IAAI,CAAClD,GAAxB;AACH;;AACDkD,UAAI,CAAClD,GAAL,GAAW,CAAX;AACH;;AAED,SAAKgG,QAAL,CAAc9C,IAAd,EAAoBgC,OAApB;AACH;;AACD,OAAKC,OAAL,GAAe,KAAf;AACH,CA7ED;;AA+EArD,SAAS,CAACQ,SAAV,CAAoB0D,QAApB,GAA+B,UAAS9C,IAAT,EAAegC,OAAf,EAAwB;AAAA;;AACnD,MAAMjD,IAAI,GAAG,OAAOiD,OAAP,KAAmB,WAAnB,GAAiCA,OAAjC,GAA2C,OAAOhC,IAAI,CAACjB,IAAZ,KAAqB,WAArB,GAAmCiB,IAAI,CAACjB,IAAxC,GAA+C,KAAKA,IAA5G;AADmD,MAE5CoB,KAF4C,GAEVH,IAFU,CAE5CG,KAF4C;AAAA,MAErCO,IAFqC,GAEVV,IAFU,CAErCU,IAFqC;AAAA,MAE/BqC,QAF+B,GAEV/C,IAFU,CAE/B+C,QAF+B;AAAA,MAErBC,OAFqB,GAEVhD,IAFU,CAErBgD,OAFqB;;AAInD,MAAIjE,IAAJ,EAAU;AACN,QAAI,CAACiE,OAAD,IAAY,OAAOA,OAAP,KAAmB,UAA/B,IAA6C,CAACA,OAAO,CAACC,IAAR,CAAajD,IAAb,CAAlD,EAAsE;AAClE,WAAKI,WAAL,CAAiBJ,IAAjB;AACH;;AACDU,QAAI;AACJ;AACH,GAVkD,CAYnD;AACA;AACA;;;AACA,MAAIwC,OAAO,GAAG,KAAK7C,aAAL,CAAmB,YAAM;AACnC6C,WAAO,GAAG,IAAV;AACAxC,QAAI;AACP,GAHa,CAAd;;AAKAV,MAAI,CAACgB,MAAL,GAAc,YAAM;AAChB;AACAhB,QAAI,CAACgB,MAAL,GAAcxE,SAAd;;AAEA,UAAI,CAAC2G,eAAL,CAAqBD,OAArB;;AACAA,WAAO,GAAG,IAAV,CALgB,CAOhB;;AACA,UAAI,CAAC7C,aAAL,CAAmB,YAAM;AACrB,YAAI,CAACb,OAAL,CAAaW,KAAb,EAAoB,IAApB;AACH,KAFD;;AAIA,QAAI,OAAO4C,QAAP,KAAoB,UAAxB,EAAoC;AAChCA,cAAQ;AACX;AACJ,GAfD,CApBmD,CAqCnD;;;AACA,MAAI,CAACC,OAAD,IAAY,OAAOA,OAAP,KAAmB,UAA/B,IAA6C,CAACA,OAAO,CAACC,IAAR,CAAajD,IAAb,CAAlD,EAAsE;AAClE,SAAKI,WAAL,CAAiBJ,IAAjB;AACH;AACJ,CAzCD;AA2CA;;;;;;AAIApB,SAAS,CAACQ,SAAV,CAAoBgE,OAApB,GAA8B,UAASC,IAAT,EAAeC,SAAf,EAA0B;AACpD,MAAI,KAAKC,WAAT,EAAsB;AAClB,WAAO,KAAP;AACH;;AAED,OAAKA,WAAL,GAAmB,IAAnB;AACA,OAAKC,WAAL,GAAmBF,SAAnB;;AAEA,MAAID,IAAI,KAAK,KAAb,EAAoB;AAChB,SAAKhB,eAAL,GAAuB,IAAvB;;AACA,SAAK1C,QAAL;;AACA,WAAO,IAAP;AACH;;AAED,SAAO,KAAK8D,QAAL,CAAcJ,IAAd,CAAP;AACH,CAfD;;AAiBAzE,SAAS,CAACQ,SAAV,CAAoBqE,QAApB,GAA+B,UAASJ,IAAT,EAAe;AAC1C,OAAKhB,eAAL,GAAuB,KAAvB;;AAEA,MAAIqB,CAAJ,EAAOC,IAAP,EAAaC,CAAb,EAAgBC,KAAhB,CAH0C,CAK1C;;;AACA,OAAKH,CAAC,GAAG,CAAJ,EAAOC,IAAI,GAAG,KAAK3E,MAAL,CAAY2D,MAA/B,EAAuCe,CAAC,GAAGC,IAA3C,EAAiDD,CAAC,EAAlD,EAAsD;AAClD,QAAM5D,KAAK,GAAG,KAAKd,MAAL,CAAY4C,aAAZ,GAA4BzF,KAA5B,EAAd;;AAEA,SAAKyH,CAAC,GAAG,CAAJ,EAAOC,KAAK,GAAG/D,KAAK,CAACC,KAAN,CAAY4C,MAAhC,EAAwCiB,CAAC,GAAGC,KAA5C,EAAmDD,CAAC,EAApD,EAAwD;AACpD,UAAM5D,IAAI,GAAGF,KAAK,CAACC,KAAN,CAAY6B,aAAZ,GAA4BzF,KAA5B,EAAb;;AACA,UAAIkH,IAAI,KAAK,KAAb,EAAoB;AAChBrD,YAAI,CAACgB,MAAL;AACH;;AACD,WAAKZ,WAAL,CAAiBJ,IAAjB;AACH;AACJ;;AAED,MAAI,KAAKoC,eAAL,EAAJ,EAA4B;AACxB,WAAO,KAAP;AACH;;AAED,MAAMoB,WAAW,GAAG,KAAKA,WAAzB;AAEA,OAAK9D,SAAL,GAAiB,IAAjB;;AACA,MAAI,eAAe,OAAO8D,WAA1B,EAAuC;AACnCA,eAAW;AACd;;AACD,SAAO,IAAP;AACH,CA7BD;;AA+BA5E,SAAS,CAACQ,SAAV,CAAoB0E,QAApB,GAA+B,UAASC,UAAT,EAAqBhG,QAArB,EAA+BiG,QAA/B,EAAyCC,QAAzC,EAAmD;AAAA;;AAC9E,UAAQC,SAAS,CAACvB,MAAlB;AACI,SAAK,CAAL;AACI,UAAI,OAAO5E,QAAP,KAAoB,UAAxB,EAAoC;AAChCkG,gBAAQ,GAAGlG,QAAX;AACAA,gBAAQ,GAAG,IAAX;AACH;;AACD;;AACJ,SAAK,CAAL;AACIkG,cAAQ,GAAGD,QAAX;AACAA,cAAQ,GAAG,IAAX;;AAEA,UAAI,eAAe,OAAOjG,QAA1B,EAAoC;AAChCiG,gBAAQ,GAAGjG,QAAX;AACAA,gBAAQ,GAAG,IAAX;AACH;;AACD;;AACJ,YAhBJ,CAiBQ;;AAjBR;;AAoBA,MAAIkG,QAAQ,IAAI,IAAhB,EAAsB;AAClBA,YAAQ,GAAGpD,QAAQ,CAACzB,SAApB;AACH;;AAED,MAAM+E,QAAQ,GAAG5G,cAAc,CAACwG,UAAD,CAA/B;;AACA,MAAII,QAAQ,KAAK,IAAjB,EAAuB;AACnBF,YAAQ;AACR,WAAO,IAAP;AACH;;AAED,MAAMG,UAAU,GAAG,EAAnB;AACA,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAItE,IAAJ;AACA,MAAIuE,OAAO,GAAG,CAAd;AACA,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,IAAI,GAAG,KAAX;;AAEA,MAAMzB,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,QAAIyB,IAAJ,EAAU;AACN,aAAO,KAAP;AACH;;AAED,QAAMC,QAAQ,GAAGP,QAAQ,EAAzB;;AAEA,QAAIO,QAAQ,KAAK,IAAjB,EAAuB;AACnBD,UAAI,GAAG,IAAP;AACA,aAAO,KAAP;AACH;;AAEDH,SAAK,CAACK,IAAN,CAAWD,QAAX;AACAN,cAAU,CAACO,IAAX,CAAgB3E,IAAI,CAACgB,MAArB;AACA,WAAOhB,IAAI,CAACgB,MAAZ;AAEAuD,WAAO;AACPvE,QAAI,CAAClD,GAAL,GAAW,CAAX,CAjBkB,CAiBJ;;AACdkD,QAAI,CAACG,KAAL,GAAa,CAAb,CAlBkB,CAkBF;;AAEhB,WAAO,IAAP;AACH,GArBD;;AAuBA,MAAMS,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,QAAI0D,KAAK,CAAC3B,MAAN,KAAiB3C,IAAI,CAAC4E,SAA1B,EAAqC;AACjC,YAAI,CAACpF,OAAL;;AACA;AACH;;AAED,QAAMkE,CAAC,GAAG1D,IAAI,CAAC4E,SAAf;AACA,QAAMF,QAAQ,GAAGJ,KAAK,CAACZ,CAAD,CAAtB;AACAU,cAAU,CAACV,CAAD,CAAV,GAAgB,IAAhB;AACA1D,QAAI,CAAC4E,SAAL;;AAEA,QAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,GAAG,EAAI;AAChBV,gBAAU,CAACV,CAAD,CAAV,GAAgBlH,SAAhB;;AAEA,UAAIsI,GAAJ,EAAS;AACLT,cAAM,CAACX,CAAD,CAAN,GAAYoB,GAAZ;AACH;;AAEDP,aAAO;;AACP,YAAI,CAAC/E,OAAL;;AAEA,UAAI,CAACgF,QAAD,IAAaD,OAAO,KAAK,CAA7B,EAAgC;AAC5BN,gBAAQ,CAACI,MAAM,CAAC1B,MAAP,KAAkB,CAAlB,GAAsBnG,SAAtB,GAAkC6H,MAAnC,CAAR;AACH;AACJ,KAbD;;AAXiB,QA0BVU,GA1BU,GA0BIL,QA1BJ,CA0BVK,GA1BU;AAAA,QA0BL5I,KA1BK,GA0BIuI,QA1BJ,CA0BLvI,KA1BK;AA2BjB,QAAM6I,OAAO,GAAG,OAAOhB,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAAC7H,KAAD,EAAQ4I,GAAR,EAAaF,IAAb,CAAzC,GAA8D1I,KAAK,CAAC0I,IAAD,CAAnF;;AAEA,QAAIT,UAAU,CAACV,CAAD,CAAV,KAAkBlH,SAAlB,IAA+BwI,OAAnC,EAA4C;AACxCZ,gBAAU,CAACV,CAAD,CAAV,GAAgB,YAAM;AAClBU,kBAAU,CAACV,CAAD,CAAV,GAAgB,IAAhB;;AAEA,YAAI,OAAOsB,OAAP,KAAmB,UAAvB,EAAmC;AAC/BA,iBAAO;AACV,SAFD,MAEO,IAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AACpC,cAAI,OAAOA,OAAO,CAAChE,MAAf,KAA0B,UAA9B,EAA0C;AACtCgE,mBAAO,CAAChE,MAAR;AACH,WAFD,MAEO,IAAI,OAAOgE,OAAO,CAACC,KAAf,KAAyB,UAA7B,EAAyC;AAC5CD,mBAAO,CAACC,KAAR;AACH;AACJ;AACJ,OAZD;AAaH;AACJ,GA5CD;;AA8CA,MAAMlC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnByB,YAAQ,GAAG,IAAX;;AAEA,UAAI,CAACpE,WAAL,CAAiBJ,IAAjB,EAHmB,CAGK;;;AAExBoE,cAAU,CAACvE,OAAX,CAAmB,UAAAmB,MAAM,EAAI;AACzB,UAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAC9BA,cAAM;AACT;AACJ,KAJD;AAMA,QAAM8D,GAAG,GAAG,IAAII,KAAJ,CAAU,UAAV,CAAZ;AACAJ,OAAG,CAACK,IAAJ,GAAW,UAAX;AACAlB,YAAQ,CAACa,GAAD,CAAR;AACH,GAdD;;AAgBA9E,MAAI,GAAG,KAAKM,OAAL,CAAa;AAChBvC,YAAQ,EAARA,QADgB;AAEhB6C,UAAM,EAANA,MAFgB;AAGhBoC,WAAO,EAAPA;AAHgB,GAAb,EAIJ,UAAAoC,KAAK,EAAI;AACRpF,QAAI,GAAGoF,KAAP;AACApF,QAAI,CAAC4E,SAAL,GAAiB,CAAjB;AACH,GAPM,CAAP;;AASA,MAAI,CAAC5E,IAAI,CAACgB,MAAV,EAAkB;AACd,WAAOhB,IAAP;AACH;;AAED,SAAO,IAAIqF,KAAJ,CAAUrF,IAAV,EAAgB;AACnBsF,OADmB,eACfC,MADe,EACPC,IADO,EACDC,QADC,EACS;AACxB,UAAID,IAAI,KAAK,QAAb,EAAuB;AACnB,eAAOhB,QAAQ,GAAGhI,SAAH,GAAeuG,QAA9B;AACH;;AAED,UAAIyC,IAAI,KAAK,aAAb,EAA4B;AACxB,eAAOD,MAAM,CAACtE,WAAP,CAAmBF,IAAnB,CAAwBwE,MAAxB,CAAP;AACH;;AAED,UAAIC,IAAI,KAAK,WAAb,EAA0B;AACtB,eAAOE,OAAO,CAACJ,GAAR,OAAAI,OAAO,EAAQxB,SAAR,CAAd;AACH;;AAED,aAAO1H,SAAP;AACH;AAfkB,GAAhB,CAAP;AAiBH,CA1JD;;AA4JAoC,SAAS,CAACQ,SAAV,CAAoB8B,WAApB,GAAkC,UAASlB,IAAT,EAAe;AAC7C,MAAIF,KAAK,GAAG,KAAKd,MAAL,CAAYsG,GAAZ,CAAgB;AACxBvH,YAAQ,EAAEiC,IAAI,CAACjC;AADS,GAAhB,CAAZ;;AAGA,MAAI,CAAC+B,KAAL,EAAY;AACRA,SAAK,GAAG,KAAK6F,YAAL,CAAkB3F,IAAlB,CAAR;AACH;;AACDF,OAAK,CAACC,KAAN,CAAY6F,MAAZ,CAAmB5F,IAAnB;AACAA,MAAI,CAACF,KAAL,GAAaA,KAAb;AACH,CATD;;AAWAlB,SAAS,CAACQ,SAAV,CAAoBgD,eAApB,GAAsC,SAASA,eAAT,CAAyBC,eAAzB,EAA0C;AAC5E,MAAI,KAAKwD,iBAAL,EAAJ,EAA8B;AAC1B,WAAO,IAAP;AACH;;AAED,MAAI,KAAK3D,SAAT,EAAoB;AAChB4D,gBAAY,CAAC,KAAK5D,SAAN,CAAZ;AACA,WAAO,KAAKA,SAAZ;AACH;;AAED,MAAIG,eAAJ,EAAqB;AACjB,SAAKoB,QAAL;AACH;;AAED,SAAO,KAAP;AACH,CAfD;;AAiBA7E,SAAS,CAACQ,SAAV,CAAoB2G,OAApB,GAA8B,SAASA,OAAT,GAAmB;AAC7C,SAAOC,OAAO,CAAC,KAAK9D,SAAN,CAAd;AACH,CAFD;;AAIAtD,SAAS,CAACQ,SAAV,CAAoB6G,gBAApB,GAAuC,SAASA,gBAAT,GAA4B;AAC/D,SAAOjI,OAAO,CAACiF,IAAR,CAAa,IAAb,EAAmB,QAAnB,KAAgC,KAAK4C,iBAAL,EAAvC;AACH,CAFD;;AAIAjH,SAAS,CAACQ,SAAV,CAAoB8G,qBAApB,GAA4C,SAASA,qBAAT,GAAiC;AACzE,MAAIC,KAAK,GAAG,CAAZ;;AAEA,MAAI,CAAC,KAAKF,gBAAL,EAAL,EAA8B;AAC1B,WAAOE,KAAP;AACH;;AAED,MAAIhC,QAAQ,GAAG,KAAKnF,MAAL,CAAY4C,aAAZ,EAAf;;AAEA,MAAI9B,KAAJ,EAAW6B,YAAX,EAAyB3B,IAAzB;;AACA,SAAOmE,QAAP,EAAiB;AACbrE,SAAK,GAAGqE,QAAQ,CAAChI,KAAT,EAAR;;AAEA,QAAI2D,KAAK,IAAI,IAAT,IAAiBA,KAAK,CAACC,KAAN,CAAY4C,MAAZ,KAAuB,CAA5C,EAA+C;AAC3ChB,kBAAY,GAAG7B,KAAK,CAACC,KAAN,CAAY6B,aAAZ,EAAf;;AAEA,aAAOD,YAAP,EAAqB;AACjB3B,YAAI,GAAG2B,YAAY,CAACxF,KAAb,EAAP;;AACA,YAAI6D,IAAI,IAAI,IAAZ,EAAkB;AACdmG,eAAK,IAAInG,IAAI,CAAClD,GAAd;AACH;;AACD6E,oBAAY,GAAGA,YAAY,CAACI,IAAb,EAAf;AACH;AACJ;;AAEDoC,YAAQ,GAAGA,QAAQ,CAACpC,IAAT,EAAX;AACH;;AAED,SAAOoE,KAAP;AACH,CA7BD;;AA+BAvH,SAAS,CAACQ,SAAV,CAAoByG,iBAApB,GAAwC,SAASA,iBAAT,GAA6B;AACjE,SAAO,KAAK7G,MAAL,CAAY2D,MAAZ,KAAuB,CAA9B;AACH,CAFD;;AAIA/D,SAAS,CAACQ,SAAV,CAAoB+C,UAApB,GAAiC,SAASA,UAAT,GAAsB;AACnD,MAAI,CAAC,KAAK0D,iBAAL,EAAL,EAA+B;AAC3B;AACH;;AACD,MAAMO,KAAK,GAAG,IAAd;;AACA,OAAKlE,SAAL,GAAiBd,UAAU,CAAC,YAAM;AAC9BgF,SAAK,CAACjE,UAAN;AACH,GAF0B,EAExB,IAFwB,CAA3B;AAGH,CARD;AAUA;;;;;;AAIAvD,SAAS,CAACQ,SAAV,CAAoBgB,WAApB,GAAkC,SAASA,WAAT,CAAqBJ,IAArB,EAA2B;AACzD,MAAIA,IAAI,CAACmB,KAAT,EAAgB;AACZ2E,gBAAY,CAAC9F,IAAI,CAACmB,KAAN,CAAZ;AACH;;AAEDnB,MAAI,CAACF,KAAL,CAAWC,KAAX,CAAiBsG,MAAjB,CAAwBrG,IAAxB;;AAEA,MAAIA,IAAI,CAACF,KAAL,CAAWC,KAAX,CAAiB4C,MAAjB,KAA4B,CAAhC,EAAmC;AAC/B;AACA,SAAK3D,MAAL,CAAYqH,MAAZ,CAAmBrG,IAAI,CAACF,KAAxB;;AAEA,SAAKsC,eAAL;AACH;;AAEDpC,MAAI,CAACoD,OAAL;AACH,CAfD;;AAiBAxE,SAAS,CAACQ,SAAV,CAAoBuG,YAApB,GAAmC,SAASA,YAAT,CAAsB3F,IAAtB,EAA4B;AAC3D,MAAMD,KAAK,GAAG,IAAI3B,SAAJ,CAAc;AACxBC,cAAU,EAAEX,YADY;AAExBuB,YAAQ,EAAE3B,oBAFc;AAGxBgJ,aAAS,EAAE;AAHa,GAAd,CAAd;AAMA,MAAMxG,KAAK,GAAG;AACV/B,YAAQ,EAAEiC,IAAI,CAACjC,QADL;AAEVgC,SAAK,EAALA;AAFU,GAAd;;AAIA,OAAKf,MAAL,CAAY4G,MAAZ,CAAmB9F,KAAnB;;AACA,SAAOA,KAAP;AACH,CAbD;;AAeAlB,SAAS,CAACQ,SAAV,CAAoBiB,aAApB,GAAqC,YAAM;AACvC,MAAI,OAAOkG,MAAP,KAAkB,QAAlB,IAA8B,OAAOA,MAAM,CAACC,YAAd,KAA+B,UAAjE,EAA6E;AACzE,WAAOD,MAAM,CAACC,YAAd;AACH;;AAED,SAAO,UAAAC,EAAE,EAAI;AACT,WAAOrF,UAAU,CAACqF,EAAD,EAAK,CAAL,CAAjB;AACH,GAFD;AAGH,CARmC,EAApC;;AAUA7H,SAAS,CAACQ,SAAV,CAAoB+D,eAApB,GAAuC,YAAM;AACzC,MAAI,OAAOoD,MAAP,KAAkB,QAAlB,IAA8B,OAAOA,MAAM,CAACG,cAAd,KAAiC,UAAnE,EAA+E;AAC3E,WAAOH,MAAM,CAACG,cAAd;AACH;;AAED,SAAO,UAAA7I,EAAE,EAAI;AACTiI,gBAAY,CAACjI,EAAD,CAAZ;AACH,GAFD;AAGH,CARqC,EAAtC;;AAUAI,MAAM,CAAC0I,MAAP,CAAczK,OAAd,EAAuB;AACnB0K,WAAS,EAAE,qBAAa;AAAA,uCAATC,IAAS;AAATA,UAAS;AAAA;;AACpB,sBAAWjI,SAAX,EAAwBiI,IAAxB;AACH,GAHkB;AAInBjI,WAAS,EAATA,SAJmB;AAKnBpB,WAAS,EAATA;AALmB,CAAvB,E;;;;;;;AC7tBA,IAAIsJ,CAAJ,C,CAEA;;AACAA,CAAC,GAAI,YAAW;AACf,SAAO,IAAP;AACA,CAFG,EAAJ;;AAIA,IAAI;AACH;AACAA,GAAC,GAAGA,CAAC,IAAIjG,QAAQ,CAAC,aAAD,CAAR,EAAL,IAAkC,CAAC,GAAEkG,IAAH,EAAS,MAAT,CAAtC;AACA,CAHD,CAGE,OAAMC,CAAN,EAAS;AACV;AACA,MAAG,OAAOC,MAAP,KAAkB,QAArB,EACCH,CAAC,GAAGG,MAAJ;AACD,C,CAED;AACA;AACA;;;AAEAhL,MAAM,CAACC,OAAP,GAAiB4K,CAAjB,C;;;;;;;;;;;;ACpBA7K,MAAM,CAACC,OAAP;AACI,6BAAYqE,OAAZ,EAAqB;AAAA;;AACjB,QAAIA,OAAO,KAAK,IAAZ,IAAoB,OAAOA,OAAP,KAAmB,QAAvC,IAAmD,OAAOA,OAAO,CAACtB,QAAf,KAA4B,UAAnF,EAA+F;AAC3F,YAAM,IAAIiG,KAAJ,CAAU,wCAAV,CAAN;AACH;;AACD,QAAI3E,OAAO,KAAK,IAAZ,IAAoB,OAAOA,OAAP,KAAmB,QAAvC,IAAmD,OAAOA,OAAO,CAAClC,UAAf,KAA8B,UAArF,EAAiG;AAC7F,YAAM,IAAI6G,KAAJ,CAAU,4CAAV,CAAN;AACH;;AACD,SAAK5G,IAAL,GAAY,IAAIiC,OAAO,CAACtB,QAAZ,CAAqBsB,OAArB,CAAZ;AACA,SAAKoC,MAAL,GAAc,CAAd;AACH;;AAVL;AAAA;AAAA,2BAYWxG,KAZX,EAYkB;AACV,WAAKmC,IAAL,CAAUsH,MAAV,CAAiBzJ,KAAjB;AACA,WAAKwG,MAAL,IAAe,CAAf;AACA,aAAO,IAAP;AACH;AAhBL;AAAA;AAAA,2BAkBWxG,KAlBX,EAkBkB;AACV,WAAKmC,IAAL,CAAU+H,MAAV,CAAiBlK,KAAjB;AACA,WAAKwG,MAAL,IAAe,CAAf;AACA,aAAO,IAAP;AACH;AAtBL;AAAA;AAAA,6BAwBaxG,KAxBb,EAwBoB;AACZ,aAAO,KAAKmC,IAAL,CAAU4I,QAAV,CAAmB/K,KAAnB,CAAP;AACH,KA1BL,CA4BI;;AA5BJ;AAAA;AAAA,8BA6Bc;AACN,aAAO,KAAKmC,IAAL,CAAU6I,OAAV,EAAP;AACH;AA/BL;AAAA;AAAA,4BAiCYlD,QAjCZ,EAiCsBmD,OAjCtB,EAiC+B;AACvB,WAAK9I,IAAL,CAAU+I,WAAV,CAAsBpD,QAAtB,EAAgC,IAAhC,EAAsCmD,OAAtC;AACH;AAnCL;AAAA;AAAA,wBAqCQnD,QArCR,EAqCkBmD,OArClB,EAqC2B;AACnB,UAAME,GAAG,GAAG,EAAZ;AACA,WAAKhJ,IAAL,CAAU+I,WAAV,CAAsB,UAAClL,KAAD,EAAQoL,KAAR,EAAeC,IAAf,EAAwB;AAC1CF,WAAG,CAAC3C,IAAJ,CAASV,QAAQ,CAAChB,IAAT,CAAcmE,OAAd,EAAuBjL,KAAvB,EAA8BoL,KAA9B,EAAqCC,IAArC,CAAT;AACH,OAFD,EAEG,IAFH,EAESJ,OAFT;AAGA,aAAOE,GAAP;AACH;AA3CL;AAAA;AAAA,2BA6CWrD,QA7CX,EA6CqBmD,OA7CrB,EA6C8B;AACtB,UAAME,GAAG,GAAG,EAAZ;AACA,WAAKhJ,IAAL,CAAU+I,WAAV,CAAsB,UAAClL,KAAD,EAAQoL,KAAR,EAAeC,IAAf,EAAwB;AAC1C,YAAIvD,QAAQ,CAAChB,IAAT,CAAcmE,OAAd,EAAuBjL,KAAvB,EAA8BoL,KAA9B,EAAqCC,IAArC,CAAJ,EAAgD;AAC5CF,aAAG,CAAC3C,IAAJ,CAASxI,KAAT;AACH;AACJ,OAJD,EAIG,IAJH,EAISiL,OAJT;AAKA,aAAOE,GAAP;AACH;AArDL;AAAA;AAAA,0BAuDUrD,QAvDV,EAuDoBmD,OAvDpB,EAuD6B;AACrB,UAAIE,GAAG,GAAG,IAAV;AACA,WAAKhJ,IAAL,CAAU+I,WAAV,CAAsB,UAAClL,KAAD,EAAQoL,KAAR,EAAeC,IAAf,EAAwB;AAC1C,YAAI,CAACvD,QAAQ,CAAChB,IAAT,CAAcmE,OAAd,EAAuBjL,KAAvB,EAA8BoL,KAA9B,EAAqCC,IAArC,CAAL,EAAiD;AAC7CF,aAAG,GAAG,KAAN;AACH;;AACD,eAAO,CAACA,GAAR;AACH,OALD,EAKG,IALH,EAKSF,OALT,EAKkB,IALlB;AAMA,aAAOE,GAAP;AACH;AAhEL;AAAA;AAAA,yBAkESrD,QAlET,EAkEmBmD,OAlEnB,EAkE4B;AACpB,UAAIE,GAAG,GAAG,KAAV;AACA,WAAKhJ,IAAL,CAAU+I,WAAV,CAAsB,UAAClL,KAAD,EAAQoL,KAAR,EAAeC,IAAf,EAAwB;AAC1C,YAAIvD,QAAQ,CAAChB,IAAT,CAAcmE,OAAd,EAAuBjL,KAAvB,EAA8BoL,KAA9B,EAAqCC,IAArC,CAAJ,EAAgD;AAC5CF,aAAG,GAAG,IAAN;AACH;;AACD,eAAOA,GAAP;AACH,OALD,EAKG,IALH,EAKSF,OALT;AAMA,aAAOE,GAAP;AACH,KA3EL,CA6EI;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;;AAnGJ;AAAA;AAAA,iCAoGiBnL,KApGjB,EAoGwB;AAChB,aAAO,KAAKmC,IAAL,CAAUmJ,YAAV,CAAuBtL,KAAvB,CAAP;AACH,KAtGL,CAwGI;;AAxGJ;AAAA;AAAA,oCAyGoB;AACZ,aAAO,KAAKmC,IAAL,CAAUsD,aAAV,EAAP;AACH,KA3GL,CA6GI;;AA7GJ;AAAA;AAAA,kCA8GkB;AACV,aAAO,KAAKtD,IAAL,CAAUsE,WAAV,EAAP;AACH;AAhHL;;AAAA;AAAA,I;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,IAAM8E,0BAA0B,GAAG1L,mBAAO,CAAC,CAAD,CAA1C;;AACA,IAAM2L,gBAAgB,GAAG3L,mBAAO,CAAC,CAAD,CAAhC,C,CAEA;AAEA;AACA;AACA;AACA;;;AAEA,IAAM4L,UAAU,GAAG,SAAbA,UAAa,CAAArJ,IAAI,EAAI;AACvB,MAAMsJ,GAAG,GAAGtJ,IAAI,CAACI,KAAjB;AACAkJ,KAAG,CAACzL,MAAJ,GAAa,IAAb;AAEAmC,MAAI,CAACI,KAAL,GAAakJ,GAAG,CAACnJ,IAAjB;;AACA,MAAIH,IAAI,CAACI,KAAL,KAAe,IAAnB,EAAyB;AACrBJ,QAAI,CAACI,KAAL,CAAWvC,MAAX,GAAoBmC,IAApB;AACH;;AAEDsJ,KAAG,CAACnJ,IAAJ,GAAWH,IAAX;;AACA,MAAIsJ,GAAG,CAACnJ,IAAJ,KAAa,IAAjB,EAAuB;AACnBmJ,OAAG,CAACnJ,IAAJ,CAAStC,MAAT,GAAkByL,GAAlB;AACH;;AACDA,KAAG,CAACxL,KAAJ,GAAYkC,IAAI,CAAClC,KAAjB;AACAkC,MAAI,CAAClC,KAAL,GAAa,IAAb;AACA,SAAOwL,GAAP;AACH,CAhBD;;AAkBA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAvJ,IAAI,EAAI;AACxB,MAAMsJ,GAAG,GAAGtJ,IAAI,CAACG,IAAjB;AACAmJ,KAAG,CAACzL,MAAJ,GAAa,IAAb;AAEAmC,MAAI,CAACG,IAAL,GAAYmJ,GAAG,CAAClJ,KAAhB;;AACA,MAAIJ,IAAI,CAACG,IAAL,KAAc,IAAlB,EAAwB;AACpBH,QAAI,CAACG,IAAL,CAAUtC,MAAV,GAAmBmC,IAAnB;AACH;;AAEDsJ,KAAG,CAAClJ,KAAJ,GAAYJ,IAAZ;;AACA,MAAIsJ,GAAG,CAAClJ,KAAJ,KAAc,IAAlB,EAAwB;AACpBkJ,OAAG,CAAClJ,KAAJ,CAAUvC,MAAV,GAAmByL,GAAnB;AACH;;AAEDA,KAAG,CAACxL,KAAJ,GAAYkC,IAAI,CAAClC,KAAjB;AACAkC,MAAI,CAAClC,KAAL,GAAa,IAAb;AACA,SAAOwL,GAAP;AACH,CAjBD;;AAmBA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAAxJ,IAAI,EAAI;AACtBA,MAAI,CAAClC,KAAL,GAAa,CAACkC,IAAI,CAAClC,KAAnB;AACAkC,MAAI,CAACG,IAAL,CAAUrC,KAAV,GAAkB,CAACkC,IAAI,CAACG,IAAL,CAAUrC,KAA7B;AACAkC,MAAI,CAACI,KAAL,CAAWtC,KAAX,GAAmB,CAACkC,IAAI,CAACI,KAAL,CAAWtC,KAA/B;AACH,CAJD;;AAMA,IAAM2L,WAAW,GAAG,SAAdA,WAAc,CAAAzJ,IAAI,EAAI;AACxB;AACAwJ,WAAS,CAACxJ,IAAD,CAAT;;AACA,MAAIA,IAAI,CAACI,KAAL,KAAe,IAAf,IAAuBJ,IAAI,CAACI,KAAL,CAAWD,IAAX,KAAoB,IAA3C,IAAmDH,IAAI,CAACI,KAAL,CAAWD,IAAX,CAAgBrC,KAAvE,EAA8E;AAC1EkC,QAAI,CAACI,KAAL,GAAamJ,WAAW,CAACvJ,IAAI,CAACI,KAAN,CAAxB;AACAJ,QAAI,CAACI,KAAL,CAAWvC,MAAX,GAAoBmC,IAApB;AACAA,QAAI,GAAGqJ,UAAU,CAACrJ,IAAD,CAAjB;AACAwJ,aAAS,CAACxJ,IAAD,CAAT;AACH;;AACD,SAAOA,IAAP;AACH,CAVD;;AAYA,IAAM0J,YAAY,GAAG,SAAfA,YAAe,CAAA1J,IAAI,EAAI;AACzB;AACAwJ,WAAS,CAACxJ,IAAD,CAAT;;AACA,MAAIA,IAAI,CAACG,IAAL,KAAc,IAAd,IAAsBH,IAAI,CAACG,IAAL,CAAUA,IAAV,KAAmB,IAAzC,IAAiDH,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAerC,KAApE,EAA2E;AACvEkC,QAAI,GAAGuJ,WAAW,CAACvJ,IAAD,CAAlB;AACAwJ,aAAS,CAACxJ,IAAD,CAAT;AACH;;AACD,SAAOA,IAAP;AACH,CARD;;AAUA,IAAM2J,YAAY,GAAG,SAAfA,YAAe,CAAC3J,IAAD,EAAOpC,KAAP,EAAcgM,OAAd,EAAuB7B,SAAvB,EAAkClK,MAAlC,EAA6C;AAC9D,MAAImC,IAAI,KAAK,IAAb,EAAmB;AACf,QAAI+H,SAAS,IAAInK,KAAK,YAAYwL,gBAAlC,EAAoD;AAChD,UAAI,CAACxL,KAAK,CAACE,KAAX,EAAkB;AACdF,aAAK,CAACE,KAAN,GAAc,IAAd;AACH;;AACD,aAAOF,KAAP;AACH;;AACD,WAAO,IAAIwL,gBAAJ,CAAqBxL,KAArB,CAAP;AACH,GAT6D,CAW9D;AACA;;;AACA,MAAIoC,IAAI,CAACpC,KAAL,KAAeA,KAAnB,EAA0B;AACtB,UAAM,IAAI+I,KAAJ,CAAU,sBAAV,CAAN;AACH;;AAED,MAAIiD,OAAO,CAAChM,KAAD,EAAQoC,IAAI,CAACpC,KAAb,CAAP,GAA6B,CAAjC,EAAoC;AAChCoC,QAAI,CAACG,IAAL,GAAYwJ,YAAY,CAAC3J,IAAI,CAACG,IAAN,EAAYvC,KAAZ,EAAmBgM,OAAnB,EAA4B7B,SAA5B,EAAuC/H,IAAvC,CAAxB;AACAA,QAAI,CAACG,IAAL,CAAUtC,MAAV,GAAmBmC,IAAnB;AACH,GAHD,MAGO;AACHA,QAAI,CAACI,KAAL,GAAauJ,YAAY,CAAC3J,IAAI,CAACI,KAAN,EAAaxC,KAAb,EAAoBgM,OAApB,EAA6B7B,SAA7B,EAAwC/H,IAAxC,CAAzB;AACAA,QAAI,CAACI,KAAL,CAAWvC,MAAX,GAAoBmC,IAApB;AACH;;AAED,MAAIA,IAAI,CAACI,KAAL,KAAe,IAAf,IAAuBJ,IAAI,CAACI,KAAL,CAAWtC,KAAlC,IAA2C,EAAEkC,IAAI,CAACG,IAAL,KAAc,IAAd,IAAsBH,IAAI,CAACG,IAAL,CAAUrC,KAAlC,CAA/C,EAAyF;AACrFkC,QAAI,GAAGqJ,UAAU,CAACrJ,IAAD,CAAjB;AACH;;AAED,MAAIA,IAAI,CAACG,IAAL,KAAc,IAAd,IAAsBH,IAAI,CAACG,IAAL,CAAUrC,KAAhC,IAAyCkC,IAAI,CAACG,IAAL,CAAUA,IAAV,KAAmB,IAA5D,IAAoEH,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAerC,KAAvF,EAA8F;AAC1FkC,QAAI,GAAGuJ,WAAW,CAACvJ,IAAD,CAAlB;AACH,GA/B6D,CAiC9D;;;AACA,MAAIA,IAAI,CAACG,IAAL,KAAc,IAAd,IAAsBH,IAAI,CAACG,IAAL,CAAUrC,KAAhC,IAAyCkC,IAAI,CAACI,KAAL,KAAe,IAAxD,IAAgEJ,IAAI,CAACI,KAAL,CAAWtC,KAA/E,EAAsF;AAClF0L,aAAS,CAACxJ,IAAD,CAAT;AACH;;AAED,SAAOA,IAAP;AACH,CAvCD;;AAyCA,IAAM6J,WAAW,GAAG,SAAdA,WAAc,CAAA7J,IAAI,EAAI;AACxB,SAAOA,IAAI,CAACG,IAAL,KAAc,IAArB,EAA2B;AACvBH,QAAI,GAAGA,IAAI,CAACG,IAAZ;AACH;;AACD,SAAOH,IAAP;AACH,CALD;;AAOA,IAAM8J,KAAK,GAAG,SAARA,KAAQ,CAAA9J,IAAI,EAAI;AAClB;AACA,MAAIA,IAAI,CAACI,KAAL,KAAe,IAAf,IAAuBJ,IAAI,CAACI,KAAL,CAAWtC,KAAtC,EAA6C;AACzCkC,QAAI,GAAGqJ,UAAU,CAACrJ,IAAD,CAAjB;AACH,GAJiB,CAMlB;;;AACA,MAAIA,IAAI,CAACG,IAAL,KAAc,IAAd,IAAsBH,IAAI,CAACG,IAAL,CAAUrC,KAAhC,IAAyCkC,IAAI,CAACG,IAAL,CAAUA,IAAV,KAAmB,IAA5D,IAAoEH,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAerC,KAAvF,EAA8F;AAC1FkC,QAAI,GAAGuJ,WAAW,CAACvJ,IAAD,CAAlB;AACH,GATiB,CAWlB;;;AACA,MAAIA,IAAI,CAACG,IAAL,KAAc,IAAd,IAAsBH,IAAI,CAACG,IAAL,CAAUrC,KAAhC,IAAyCkC,IAAI,CAACI,KAAL,KAAe,IAAxD,IAAgEJ,IAAI,CAACI,KAAL,CAAWtC,KAA/E,EAAsF;AAClF0L,aAAS,CAACxJ,IAAD,CAAT;AACH;;AAED,SAAOA,IAAP;AACH,CAjBD;;AAmBA,IAAM+J,aAAa,GAAG,SAAhBA,aAAgB,CAAA/J,IAAI,EAAI;AAC1B,MAAIA,IAAI,CAACG,IAAL,KAAc,IAAlB,EAAwB;AACpB,WAAO,IAAP;AACH;;AACD,MAAI,CAACH,IAAI,CAACG,IAAL,CAAUrC,KAAX,IAAoB,EAAEkC,IAAI,CAACG,IAAL,CAAUA,IAAV,KAAmB,IAAnB,IAA2BH,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAerC,KAA5C,CAAxB,EAA4E;AACxEkC,QAAI,GAAGyJ,WAAW,CAACzJ,IAAD,CAAlB;AACH;;AACDA,MAAI,CAACG,IAAL,GAAY4J,aAAa,CAAC/J,IAAI,CAACG,IAAN,CAAzB;;AACA,MAAIH,IAAI,CAACG,IAAL,KAAc,IAAlB,EAAwB;AACpBH,QAAI,CAACG,IAAL,CAAUtC,MAAV,GAAmBmC,IAAnB;AACH;;AACD,SAAO8J,KAAK,CAAC9J,IAAD,CAAZ;AACH,CAZD,C,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AAEA,IAAMgK,cAAc,GAAG,SAAjBA,cAAiB,CAAChK,IAAD,EAAOpC,KAAP,EAAcgM,OAAd,EAAuB7B,SAAvB,EAAqC;AACxD,MAAI/H,IAAI,KAAK,IAAb,EAAmB;AACf,UAAM,IAAI2G,KAAJ,CAAU,kBAAV,CAAN;AACH;;AAED,MAAI3G,IAAI,CAACpC,KAAL,KAAeA,KAAf,IAAwBgM,OAAO,CAAChM,KAAD,EAAQoC,IAAI,CAACpC,KAAb,CAAP,GAA6B,CAAzD,EAA4D;AACxD,QAAIoC,IAAI,CAACG,IAAL,KAAc,IAAlB,EAAwB;AACpB,YAAM,IAAIwG,KAAJ,CAAU,kBAAV,CAAN;AACH;;AAED,QAAI,CAAC3G,IAAI,CAACG,IAAL,CAAUrC,KAAX,IAAoB,EAAEkC,IAAI,CAACG,IAAL,CAAUA,IAAV,KAAmB,IAAnB,IAA2BH,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAerC,KAA5C,CAAxB,EAA4E;AACxEkC,UAAI,GAAGyJ,WAAW,CAACzJ,IAAD,CAAlB;AACH;;AAEDA,QAAI,CAACG,IAAL,GAAY6J,cAAc,CAAChK,IAAI,CAACG,IAAN,EAAYvC,KAAZ,EAAmBgM,OAAnB,EAA4B7B,SAA5B,CAA1B;;AACA,QAAI/H,IAAI,CAACG,IAAL,KAAc,IAAlB,EAAwB;AACpBH,UAAI,CAACG,IAAL,CAAUtC,MAAV,GAAmBmC,IAAnB;AACH;AACJ,GAbD,MAaO;AACH,QAAIA,IAAI,CAACG,IAAL,KAAc,IAAd,IAAsBH,IAAI,CAACG,IAAL,CAAUrC,KAApC,EAA2C;AACvCkC,UAAI,GAAGuJ,WAAW,CAACvJ,IAAD,CAAlB;AACH;;AACD,QAAIA,IAAI,CAACI,KAAL,KAAe,IAAnB,EAAyB;AACrB,UAAIxC,KAAK,KAAKoC,IAAI,CAACpC,KAAnB,EAA0B;AACtB,eAAO,IAAP,CADsB,CACT;AAChB;;AACD,YAAM,IAAI+I,KAAJ,CAAU,kBAAV,CAAN;AACH;;AACD,QAAI,CAAC3G,IAAI,CAACI,KAAL,CAAWtC,KAAZ,IAAqB,EAAEkC,IAAI,CAACI,KAAL,CAAWD,IAAX,KAAoB,IAApB,IAA4BH,IAAI,CAACI,KAAL,CAAWD,IAAX,CAAgBrC,KAA9C,CAAzB,EAA+E;AAC3EkC,UAAI,GAAG0J,YAAY,CAAC1J,IAAD,CAAnB;AACH;;AACD,QAAIpC,KAAK,KAAKoC,IAAI,CAACpC,KAAnB,EAA0B;AACtBA,WAAK,GAAGiM,WAAW,CAAC7J,IAAI,CAACI,KAAN,CAAX,CAAwBxC,KAAhC;AACA,UAAMwC,KAAK,GAAG2J,aAAa,CAAC/J,IAAI,CAACI,KAAN,CAA3B;;AAEA,UAAI2H,SAAS,IAAInK,KAAK,YAAYwL,gBAAlC,EAAoD;AAChDxL,aAAK,CAACuC,IAAN,GAAaH,IAAI,CAACG,IAAlB;;AACA,YAAIvC,KAAK,CAACuC,IAAN,KAAe,IAAnB,EAAyB;AACrBvC,eAAK,CAACuC,IAAN,CAAWtC,MAAX,GAAoBD,KAApB;AACH;;AACDA,aAAK,CAACC,MAAN,GAAemC,IAAI,CAACnC,MAApB;AACAD,aAAK,CAACE,KAAN,GAAckC,IAAI,CAAClC,KAAnB;AACAkC,YAAI,GAAGpC,KAAP;AACH;;AAEDoC,UAAI,CAACpC,KAAL,GAAaA,KAAb;AACAoC,UAAI,CAACI,KAAL,GAAaA,KAAb;AACH,KAhBD,MAgBO;AACHJ,UAAI,CAACI,KAAL,GAAa4J,cAAc,CAAChK,IAAI,CAACI,KAAN,EAAaxC,KAAb,EAAoBgM,OAApB,EAA6B7B,SAA7B,CAA3B;AACH;;AAED,QAAI/H,IAAI,CAACI,KAAL,KAAe,IAAnB,EAAyB;AACrBJ,UAAI,CAACI,KAAL,CAAWvC,MAAX,GAAoBmC,IAApB;AACH;AACJ;;AAED,SAAO8J,KAAK,CAAC9J,IAAD,CAAZ;AACH,CAzDD,C,CA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AAEAtC,MAAM,CAACC,OAAP;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,2BACWC,KADX,EACkB;AACV,WAAKqC,IAAL,GAAY0J,YAAY,CAAC,KAAK1J,IAAN,EAAYrC,KAAZ,EAAmB,KAAKkC,UAAxB,EAAoC,KAAKiI,SAAzC,CAAxB;AACA,WAAK9H,IAAL,CAAUpC,MAAV,GAAmB,IAAnB;AACA,WAAKoC,IAAL,CAAUnC,KAAV,GAAkB,KAAlB;AACH;AALL;AAAA;AAAA,2BAOWF,KAPX,EAOkB;AACV,WAAKqC,IAAL,GAAY+J,cAAc,CAAC,KAAK/J,IAAN,EAAYrC,KAAZ,EAAmB,KAAKkC,UAAxB,EAAoC,KAAKiI,SAAzC,CAA1B;;AACA,UAAI,KAAK9H,IAAL,KAAc,IAAlB,EAAwB;AACpB,aAAKA,IAAL,CAAUpC,MAAV,GAAmB,IAAnB;AACA,aAAKoC,IAAL,CAAUnC,KAAV,GAAkB,KAAlB;AACH;AACJ;AAbL;;AAAA;AAAA,EAAoDqL,0BAApD,E;;;;;;;;;;;;AClXA,IAAMc,kBAAkB,GAAGxM,mBAAO,CAAC,CAAD,CAAlC,C,CAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;AACA,IAAMyM,kBAAkB,GAAG,SAArBA,kBAAqB,CAAClK,IAAD,EAAO0F,QAAP,EAAiByE,IAAjB,EAA0B;AACjD,MAAInK,IAAI,KAAK,IAAb,EAAmB;AACf;AACH;;AAED,MAAMwB,KAAK,GAAG,CAAC,CAAD,EAAIxB,IAAI,CAACI,KAAT,EAAgB,CAAhB,EAAmBJ,IAAI,CAACpC,KAAxB,EAA+B,CAA/B,EAAkCoC,IAAI,CAACG,IAAvC,CAAd;AACA,MAAIiK,GAAG,GAAG5I,KAAK,CAAC4C,MAAhB;AACA,MAAI2E,GAAJ;;AAEA,SAAOqB,GAAG,KAAK,CAAf,EAAkB;AACdA,OAAG,IAAI,CAAP;AACApK,QAAI,GAAGwB,KAAK,CAAC4I,GAAG,GAAG,CAAP,CAAZ;;AACA,QAAI5I,KAAK,CAAC4I,GAAD,CAAL,KAAe,CAAnB,EAAsB;AAClBrB,SAAG,GAAGrD,QAAQ,CAAC1F,IAAD,CAAd;;AACA,UAAImK,IAAI,IAAIpB,GAAZ,EAAiB;AACb;AACH;AACJ,KALD,MAKO,IAAI/I,IAAI,KAAK,IAAb,EAAmB;AACtBwB,WAAK,CAAC4I,GAAG,EAAJ,CAAL,GAAe,CAAf;AACA5I,WAAK,CAAC4I,GAAG,EAAJ,CAAL,GAAepK,IAAI,CAACI,KAApB;AACAoB,WAAK,CAAC4I,GAAG,EAAJ,CAAL,GAAe,CAAf;AACA5I,WAAK,CAAC4I,GAAG,EAAJ,CAAL,GAAepK,IAAI,CAACpC,KAApB;AACA4D,WAAK,CAAC4I,GAAG,EAAJ,CAAL,GAAe,CAAC,CAAhB;AACA5I,WAAK,CAAC4I,GAAG,EAAJ,CAAL,GAAepK,IAAI,CAACG,IAApB;AACH;AACJ;AACJ,CA1BD,C,CA4BA;AACA;;;AACAzC,MAAM,CAACC,OAAP;AACI,sCAAYqE,OAAZ,EAAqB;AAAA;;AACjB,SAAK/B,IAAL,GAAY,IAAZ;AACA,SAAKH,UAAL,GAAkBkC,OAAO,CAAClC,UAA1B;AACA,SAAKuK,aAAL,GAAqBrI,OAAO,CAACqI,aAA7B;AACA,SAAKtC,SAAL,GAAiB/F,OAAO,CAAC+F,SAAzB;AACH;;AANL;AAAA;AAAA,8BAQc;AACN,UAAMgB,GAAG,GAAG,EAAZ;AACAmB,wBAAkB,CAAC,KAAKjK,IAAN,EAAY,UAAArC,KAAK,EAAI;AACnCmL,WAAG,CAAC3C,IAAJ,CAASxI,KAAT;AACH,OAFiB,CAAlB;AAGA,aAAOmL,GAAP;AACH;AAdL;AAAA;AAAA,gCAgBgBrD,QAhBhB,EAgB0B4E,SAhB1B,EAgBqCzB,OAhBrC,EAgB8CsB,IAhB9C,EAgBoD;AAC5C,UAAI,OAAOtB,OAAP,KAAmB,WAAvB,EAAoC;AAChCA,eAAO,GAAGyB,SAAV;AACH;;AACD,UAAInF,CAAC,GAAG,CAAR;AACA+E,wBAAkB,CAAC,KAAKjK,IAAN,EAAY,UAAArC,KAAK,EAAI;AACnC,eAAO8H,QAAQ,CAAChB,IAAT,CAAcmE,OAAd,EAAuBjL,KAAvB,EAA8BuH,CAAC,EAA/B,EAAmCmF,SAAnC,CAAP;AACH,OAFiB,EAEfH,IAFe,CAAlB;AAGH;AAxBL;AAAA;AAAA,6BA0BavM,KA1Bb,EA0BoB;AAAA,UACLkC,UADK,GACS,IADT,CACLA,UADK;AAAA,UAEDE,IAFC,GAEO,IAFP,CAEPC,IAFO;AAGZ,UAAIC,GAAJ;;AAEA,aAAOF,IAAI,KAAK,IAAhB,EAAsB;AAClBE,WAAG,GAAGJ,UAAU,CAAClC,KAAD,EAAQoC,IAAI,CAACpC,KAAb,CAAhB;;AACA,YAAIsC,GAAG,KAAK,CAAZ,EAAe;AACX;AACH,SAFD,MAEO,IAAIA,GAAG,GAAG,CAAV,EAAa;AAChBF,cAAI,GAAGA,IAAI,CAACG,IAAZ;AACH,SAFM,MAEA;AACHH,cAAI,GAAGA,IAAI,CAACI,KAAZ;AACH;AACJ;;AAED,aAAOJ,IAAI,KAAK,IAAT,IAAiBA,IAAI,CAACpC,KAAL,KAAeA,KAAvC;AACH;AA3CL;AAAA;AAAA,iCA6CiBA,KA7CjB,EA6CwB;AAChB,aAAOqM,kBAAkB,CAACM,IAAnB,CAAwB,IAAxB,EAA8B3M,KAA9B,EAAqC,KAAKkC,UAA1C,CAAP;AACH;AA/CL;AAAA;AAAA,oCAiDoB;AACZ,aAAOmK,kBAAkB,CAAC9J,IAAnB,CAAwB,IAAxB,CAAP;AACH;AAnDL;AAAA;AAAA,kCAqDkB;AACV,aAAO8J,kBAAkB,CAAC7J,KAAnB,CAAyB,IAAzB,CAAP;AACH;AAvDL;;AAAA;AAAA,I;;;;;;;;;;;;AC1DA,IAAMoK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD,EAAczK,IAAd,EAAuB;AAC5C,SAAOA,IAAI,CAACyK,WAAD,CAAJ,KAAsB,IAA7B,EAAmC;AAC/BzK,QAAI,GAAGA,IAAI,CAACyK,WAAD,CAAX;AACH;;AACD,SAAOzK,IAAP;AACH,CALD;;AAOA,IAAM0K,UAAU,GAAG,SAAbA,UAAa,CAACD,WAAD,EAAczK,IAAd,EAAuB;AACtC,MAAInC,MAAJ,EAAY8M,WAAZ;;AACA,MAAI3K,IAAI,CAACyK,WAAD,CAAJ,KAAsB,IAA1B,EAAgC;AAC5B5M,UAAM,GAAGmC,IAAT;AACAA,QAAI,GAAGA,IAAI,CAACyK,WAAD,CAAX;AACAE,eAAW,GAAGF,WAAW,KAAK,MAAhB,GAAyB,OAAzB,GAAmC,MAAjD;AACAzK,QAAI,GAAGwK,gBAAgB,CAACG,WAAD,EAAc3K,IAAd,CAAvB;AACH,GALD,MAKO;AACH,WAAO,CAACnC,MAAM,GAAGmC,IAAI,CAACnC,MAAf,MAA2B,IAA3B,IAAmCA,MAAM,CAAC4M,WAAD,CAAN,KAAwBzK,IAAlE,EAAwE;AACpEA,UAAI,GAAGnC,MAAP;AACH;;AACDmC,QAAI,GAAGnC,MAAP,CAJG,CAIY;AAClB;;AACD,SAAOmC,IAAP;AACH,CAdD,C,CAgBA;AACA;;;IACMiK,kB;AACF,8BAAYW,IAAZ,EAAkB5K,IAAlB,EAAwB;AAAA;;AACpB,SAAK4K,IAAL,GAAYA,IAAZ;AACA,SAAK5K,IAAL,GAAYA,IAAZ;AACH;;;;2BAEM;AACH,UAAI,KAAKA,IAAL,KAAc,IAAlB,EAAwB;AACpB,eAAO,IAAP;AACH;;AACD,UAAMA,IAAI,GAAG0K,UAAU,CAAC,OAAD,EAAU,KAAK1K,IAAf,CAAvB;AACA,aAAOA,IAAI,KAAK,IAAT,GAAgB,IAAhB,GAAuB,IAAIiK,kBAAJ,CAAuB,KAAKW,IAA5B,EAAkC5K,IAAlC,CAA9B;AACH;;;+BAEU;AACP,UAAI,KAAKA,IAAL,KAAc,IAAlB,EAAwB;AACpB,YAAI,KAAK4K,IAAL,CAAU3K,IAAV,KAAmB,IAAvB,EAA6B;AACzB,iBAAO,IAAP;AACH;;AAED,YAAMD,KAAI,GAAGwK,gBAAgB,CAAC,OAAD,EAAU,KAAKI,IAAL,CAAU3K,IAApB,CAA7B;;AACA,eAAOD,KAAI,KAAK,IAAT,GAAgB,IAAhB,GAAuB,IAAIiK,kBAAJ,CAAuB,KAAKW,IAA5B,EAAkC5K,KAAlC,CAA9B;AACH;;AAED,UAAMA,IAAI,GAAG0K,UAAU,CAAC,MAAD,EAAS,KAAK1K,IAAd,CAAvB;AACA,aAAOA,IAAI,KAAK,IAAT,GAAgB,IAAhB,GAAuB,IAAIiK,kBAAJ,CAAuB,KAAKW,IAA5B,EAAkC5K,IAAlC,CAA9B;AACH;;;8BAES;AACN,aAAO,KAAKwD,IAAL,OAAgB,IAAvB;AACH;;;kCAEa;AACV,aAAO,KAAKc,QAAL,OAAoB,IAA3B;AACH;;;4BAEO;AACJ,aAAO,KAAKtE,IAAL,KAAc,IAAd,GAAqB,IAArB,GAA4B,KAAKA,IAAL,CAAUpC,KAA7C;AACH;;;6BAEQA,K,EAAO;AACZ,UAAI,CAAC,KAAKgN,IAAL,CAAUP,aAAf,EAA8B;AAC1B,cAAM,IAAI1D,KAAJ,CAAU,gCAAV,CAAN;AACH;;AACD,UAAI,KAAK3G,IAAL,KAAc,IAAlB,EAAwB;AACpB,cAAM,IAAI2G,KAAJ,CAAU,gCAAV,CAAN;AACH;;AACD,WAAK3G,IAAL,CAAUpC,KAAV,GAAkBA,KAAlB;AACA,aAAOA,KAAP;AACH;;;;;;AAGLqM,kBAAkB,CAACM,IAAnB,GAA0B,UAACK,IAAD,EAAOhN,KAAP,EAAckC,UAAd,EAA6B;AAAA,MACxCE,IADwC,GAChC4K,IADgC,CAC9C3K,IAD8C;AAEnD,MAAI4K,QAAQ,GAAG,IAAf,CAFmD,CAE9B;;AACrB,MAAI3K,GAAJ;;AAEA,SAAOF,IAAI,KAAK,IAAhB,EAAsB;AAClBE,OAAG,GAAGJ,UAAU,CAAClC,KAAD,EAAQoC,IAAI,CAACpC,KAAb,CAAhB;;AACA,QAAIsC,GAAG,KAAK,CAAZ,EAAe;AACX;AACH;;AAED,QAAIA,GAAG,GAAG,CAAV,EAAa;AACT,UAAIF,IAAI,CAACG,IAAL,KAAc,IAAlB,EAAwB;AACpB;AACH,OAHQ,CAKT;AACA;AACA;;;AACA0K,cAAQ,GAAG7K,IAAX;AACAA,UAAI,GAAGA,IAAI,CAACG,IAAZ;AACH,KAVD,MAUO,IAAIH,IAAI,CAACI,KAAL,KAAe,IAAnB,EAAyB;AAC5BJ,UAAI,GAAGA,IAAI,CAACI,KAAZ;AACH,KAFM,MAEA;AACHJ,UAAI,GAAG6K,QAAP;AACA;AACH;AACJ;;AAED,SAAO,IAAIZ,kBAAJ,CAAuBW,IAAvB,EAA6B5K,IAA7B,CAAP;AACH,CA9BD;;AAgCAiK,kBAAkB,CAAC9J,IAAnB,GAA0B,UAAAyK,IAAI,EAAI;AAC9B,MAAIA,IAAI,CAAC3K,IAAL,KAAc,IAAlB,EAAwB;AACpB,WAAO,IAAIgK,kBAAJ,CAAuBW,IAAvB,EAA6B,IAA7B,CAAP;AACH;;AAED,MAAM5K,IAAI,GAAGwK,gBAAgB,CAAC,MAAD,EAASI,IAAI,CAAC3K,IAAd,CAA7B;AACA,SAAO,IAAIgK,kBAAJ,CAAuBW,IAAvB,EAA6B5K,IAA7B,CAAP;AACH,CAPD;;AASAiK,kBAAkB,CAAC7J,KAAnB,GAA2B,UAAAwK,IAAI,EAAI;AAC/B,SAAO,IAAIX,kBAAJ,CAAuBW,IAAvB,EAA6B,IAA7B,CAAP;AACH,CAFD;;AAIAlN,MAAM,CAACC,OAAP,GAAiBsM,kBAAjB,C;;;;;;;;AC1HAvM,MAAM,CAACC,OAAP,GACI,wBAAYC,KAAZ,EAAkC;AAAA,MAAfC,MAAe,uEAAN,IAAM;;AAAA;;AAC9B,OAAKD,KAAL,GAAaA,KAAb;AACA,OAAKuC,IAAL,GAAY,IAAZ;AACA,OAAKC,KAAL,GAAa,IAAb;AACA,OAAKvC,MAAL,GAAcA,MAAd;AACH,CANL,C;;;;;;ACAA,IAAMiN,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,GAAG,EAAI;AAC/B,MAAI5F,CAAC,GAAG,CAAR;AACA,MAAM6F,GAAG,GAAGD,GAAG,CAAC3G,MAAhB;AAEA,SAAO,SAASZ,IAAT,GAAgB;AACnB,WAAO2B,CAAC,GAAG6F,GAAJ,GAAU;AACbxE,SAAG,EAAErB,CADQ;AAEbvH,WAAK,EAAEmN,GAAG,CAAC5F,CAAC,EAAF;AAFG,KAAV,GAGH,IAHJ;AAIH,GALD;AAMH,CAVD;;AAYA,IAAM8F,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAjN,GAAG,EAAI;AAChC,MAAImH,CAAC,GAAG,CAAR;AACA,MAAM+F,IAAI,GAAGxL,MAAM,CAACwL,IAAP,CAAYlN,GAAZ,CAAb;AACA,MAAMgN,GAAG,GAAGE,IAAI,CAAC9G,MAAjB;AAEA,SAAO,SAASZ,IAAT,GAAgB;AACnB,WAAO2B,CAAC,GAAG6F,GAAJ,GAAU;AACbxE,SAAG,EAAE0E,IAAI,CAAC/F,CAAD,CADI;AAEbvH,WAAK,EAAEI,GAAG,CAACkN,IAAI,CAAC/F,CAAC,EAAF,CAAL;AAFG,KAAV,GAGH,IAHJ;AAIH,GALD;AAMH,CAXD;;AAaA,IAAMgG,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,QAAQ,EAAI;AACvC,MAAMxF,QAAQ,GAAGwF,QAAQ,CAACC,MAAM,CAACzF,QAAR,CAAR,EAAjB;AACA,SAAO,SAASpC,IAAT,GAAgB;AACnB,QAAM/B,IAAI,GAAGmE,QAAQ,CAACpC,IAAT,EAAb;AACA,WAAO/B,IAAI,KAAK,IAAT,IAAiB,OAAOA,IAAP,KAAgB,QAAjC,GAA4CA,IAA5C,GAAmDA,IAAI,CAACyE,IAAL,GAAY,IAAZ,GAAmBzE,IAA7E;AACH,GAHD;AAIH,CAND;;AAQA,IAAMmE,QAAQ,GAAG,SAAXA,QAAW,CAAA5H,GAAG,EAAI;AACpB,MAAIA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,QAAnC,EAA6C;AACzC,WAAO,IAAP;AACH;;AAED,SAAOE,KAAK,CAACC,OAAN,CAAcH,GAAd,IAAqB8M,mBAAmB,CAAC9M,GAAD,CAAxC,GAAgDqN,MAAM,CAACzF,QAAP,IAAmB5H,GAAnB,GAAyBmN,sBAAsB,CAACnN,GAAD,CAA/C,GAAuDiN,oBAAoB,CAACjN,GAAD,CAAlI;AACH,CAND;;AAQAN,MAAM,CAACC,OAAP,GAAiBiI,QAAjB,C;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA,IAAMwD,gBAAgB,GAAG3L,mBAAO,CAAC,CAAD,CAAhC;;AACA,IAAMa,SAAS,GAAGb,mBAAO,CAAC,CAAD,CAAzB;;AAEA,IAAMgC,OAAO,GAAGC,MAAM,CAACC,cAAvB,C,CAEA;;AACA,IAAIC,aAAa,GAAG,CAApB;;IAEMX,S;;;;;AACF,qBAAYqM,KAAZ,EAAmBnJ,IAAnB,EAAyB3C,QAAzB,EAAmCjB,GAAnC,EAAwCyD,OAAxC,EAAiD;AAAA;;AAAA;;AAC7C;AACA,UAAKpE,KAAL;AACA,UAAK0B,EAAL,GAAU,EAAEM,aAAZ;AACA,UAAKgC,KAAL,GAAa,CAAb;AACA,UAAKO,IAAL,GAAYA,IAAZ;AACA,UAAK3C,QAAL,GAAgBA,QAAhB;AACA,UAAKjB,GAAL,GAAWA,GAAX;AACA,UAAKgN,SAAL,GAAiBD,KAAjB;;AAEA,QAAItJ,OAAJ,EAAa;AACT,OACI,WADJ,EAEI,UAFJ,EAGI,QAHJ,EAII,iBAJJ,EAKI,iBALJ,EAMI,MANJ,EAOI,SAPJ,EAQEV,OARF,CAQU,UAAA2F,IAAI,EAAI;AACd,YAAIxH,OAAO,CAACiF,IAAR,CAAa1C,OAAb,EAAsBiF,IAAtB,CAAJ,EAAiC;AAC7B,gBAAKA,IAAL,IAAajF,OAAO,CAACiF,IAAD,CAApB;AACH;AACJ,OAZD;AAaH;;AAxB4C;AAyBhD;;;;+BAEUuE,O,EAAS;AAChB,WAAKjN,GAAL,IAAYD,SAAS,CAACkN,OAAD,EAAU,IAAV,EAAgB,CAAhB,CAArB;AACH;;;6BAEQ;AAAA,UACEhH,QADF,GACuC,IADvC,CACEA,QADF;AAAA,UACY5C,KADZ,GACuC,IADvC,CACYA,KADZ;AAAA,UAC8B0J,KAD9B,GACuC,IADvC,CACmBC,SADnB;;AAELD,WAAK,CAACzJ,WAAN,CAAkB,IAAlB;;AAEA,UAAID,KAAK,KAAK,CAAd,EAAiB;AACb;AACA0J,aAAK,CAACxJ,aAAN,CAAoB,YAAM;AACtBwJ,eAAK,CAACrK,OAAN,CAAcW,KAAd,EAAqB,IAArB;AACH,SAFD;AAGH;;AAED,UAAI,OAAO4C,QAAP,KAAoB,UAAxB,EAAoC;AAChCA,gBAAQ;AACX;AACJ;;;gCAEWiH,Y,EAAc;AACtB,UAAI,KAAKlK,KAAL,IAAc,IAAlB,EAAwB;AACpB;AACH;;AAHqB,UAKJ+J,KALI,GAKK,IALL,CAKfC,SALe;AAOtBE,kBAAY,GAAGnN,SAAS,CAACmN,YAAD,EAAe,KAAf,EAAsBH,KAAK,CAAC9L,QAA5B,CAAxB;;AACA,UAAIiM,YAAY,KAAK,KAAKjM,QAA1B,EAAoC;AAChC;AACH;;AAED,WAAK+B,KAAL,CAAWC,KAAX,CAAiBsG,MAAjB,CAAwB,IAAxB;;AACA,UAAI,KAAKvG,KAAL,CAAWC,KAAX,CAAiB4C,MAAjB,KAA4B,CAAhC,EAAmC;AAC/B;AACAkH,aAAK,CAAC7K,MAAN,CAAaqH,MAAb,CAAoB,KAAKvG,KAAzB;AACH;;AAED,WAAK/B,QAAL,GAAgBiM,YAAhB;;AACAH,WAAK,CAAC3I,WAAN,CAAkB,IAAlB;AACH;;;8BAES;AAAA;;AACN;AACAjD,YAAM,CAACwL,IAAP,CAAY,IAAZ,EAAkB5J,OAAlB,CAA0B,UAAA2F,IAAI,EAAI;AAC9B,gBAAOA,IAAP;AACI,eAAK,QAAL;AACA,eAAK,IAAL;AACA,eAAK,KAAL;AACA,eAAK,WAAL;AACA,eAAK,OAAL;AACI;;AACJ;AACI,mBAAO,MAAI,CAACA,IAAD,CAAX;AARR;AAUH,OAXD,EAFM,CAeN;;AACA,OAAC,YAAD,EAAe,aAAf,EAA8B,SAA9B,EAAyC3F,OAAzC,CAAiD,UAAA2F,IAAI,EAAI;AACrD,cAAI,CAACA,IAAD,CAAJ,GAAahJ,SAAb;AACH,OAFD;AAIA,WAAKkD,SAAL,GAAiB,IAAjB;AACH;;;;EA3FmBiI,gB;;AA8FxB1L,MAAM,CAACC,OAAP,GAAiBsB,SAAjB,C","file":"sem-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"semLib\"] = factory();\n\telse\n\t\troot[\"semLib\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 43d528ebe5ee79de9f31","const BinaryTreeNode = require(\"./BinaryTreeNode\");\n\n// Here are some differences:\n// * This isn't a map structure: it's just a tree. There are no keys: the\n//   comparator applies to the values.\n// * We use the passed comparator.\nmodule.exports = class RedBlackTreeNode extends BinaryTreeNode {\n    constructor(value, parent = null) {\n        super(value, parent);\n        this.isRed = true; // null nodes -- leaves -- are black\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/SortedSet/RedBlackTreeNode.js","const isNumeric = obj => {\n    if (obj === undefined || obj === null || Array.isArray(obj)) {\n        return false;\n    }\n\n    const parsed = parseFloat(obj);\n    if (obj === parsed) {\n        return true;\n    }\n\n    return obj - parsed + 1 >= 0;\n};\n\nmodule.exports = isNumeric;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/isNumeric.js","const isNumeric = require(\"./isNumeric\");\n\n/**\n * Value of parsed interger or default value if not a number or < 0\n * @param  {Any} num value to parse\n * @param  {Interger} _default default value\n * @return {Interger} parsing result\n */\nconst toInteger = (num, positive, _default) => {\n    if (!isNumeric(num)) {\n        return _default;\n    }\n\n    if (num === Number.POSITIVE_INFINITY) {\n        return num;\n    }\n\n    if (num === Number.NEGATIVE_INFINITY) {\n        return positive ? _default : num;\n    }\n\n    num = parseInt(num, 10);\n\n    return positive && num < 0 ? _default : num;\n};\n\nmodule.exports = toInteger;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/toInteger.js","const AbstractSortedSet = require(\"./SortedSet/AbstractSortedSet\");\nconst RedBlackTreeStrategy = require(\"./SortedSet/RedBlackTreeStrategy\");\nconst createIterator = require(\"./iterator\");\nconst isNumeric = require(\"./isNumeric\");\nconst toInteger = require(\"./toInteger\");\nconst Inwaiting = require(\"./Inwaiting\");\n\nconst isObject = obj => {\n    return typeof obj === \"object\" && obj !== null;\n};\n\nconst idComparator = (a, b) => {\n    return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n};\n\nconst priorityComparator = (a, b) => {\n    return a.priority > b.priority ? 1 : a.priority < b.priority ? -1 : 0;\n};\n\nconst hasProp = Object.hasOwnProperty;\n\n// Debugging purpose\nlet globalCounter = 0;\n\nclass SortedSet extends AbstractSortedSet {\n    get(value) {\n        const {comparator} = this.priv;\n        let {root: node} = this.priv;\n        let cmp;\n\n        while (node !== null) {\n            cmp = comparator(value, node.value);\n            if (cmp === 0) {\n                break;\n            } else if (cmp < 0) {\n                node = node.left;\n            } else {\n                node = node.right;\n            }\n        }\n\n        return node === null ? undefined : node.value;\n    }\n}\n\n/**\n * @param  {Integer} capacity (default = 1) Number of tokens that can be handled by the Semaphore\n * @param  {Boolean} isFull   (default = false) if true object is created with tokens\n * @param  {Integer} priority (default = 15) default priority\n * @param  {Boolean} sync     if true tasks will be run synchronously\n */\nfunction Semaphore(capacity, isFull, priority, sync = false) {\n    const _queue = new SortedSet({\n        comparator: priorityComparator,\n        strategy: RedBlackTreeStrategy\n    });\n\n    this.id = ++globalCounter;\n    this._capacity = toInteger(capacity, true, 1);\n    this._queue = _queue;\n    this._numTokens = isFull ? this._capacity : 0;\n    // eslint-disable-next-line no-magic-numbers\n    this.priority = toInteger(priority, false, 15);\n    this.sync = sync;\n}\n\n/**\n * Return the number of available tokens\n * @return {Interger} number of available tokens\n */\nSemaphore.prototype.getNumTokens = function getNumTokens() {\n    return this._numTokens;\n};\n\n/**\n * Return the maximum of available tokens\n * @return {Integer} maximum of available tokens\n */\nSemaphore.prototype.getCapacity = function getCapacity() {\n    return this._capacity;\n};\n\n/**\n * Set the maximum of available tokens\n * @return {Integer} maximum of available tokens\n */\nSemaphore.prototype.setCapacity = function setCapacity(capacity) {\n    this._capacity = toInteger(capacity, true, this._capacity);\n};\n\n/**\n * Add tokens to the Semaphore\n *\n * @param {Interger} num Number of tokens to add\n * @param {Boolean}  allow capacity overflow\n */\nSemaphore.prototype.semGive = function semGive(num, overflow) {\n    if (this.destroyed) {\n        return false;\n    }\n\n    if (num !== Number.POSITIVE_INFINITY) {\n        num = toInteger(num, true, 1);\n        if (num < 1) {\n            num = 1;\n        }\n        this._numTokens += num;\n    } else {\n        this._numTokens = num;\n    }\n\n    if (!overflow && this._numTokens > this._capacity) {\n        this._numTokens = this._capacity;\n    }\n\n    this._semTake(overflow);\n\n    if (overflow && this._numTokens > this._capacity) {\n        this._numTokens = this._capacity;\n    }\n\n    return true;\n};\n\n/**\n * Give tokens to every inwaiting tasks\n */\nSemaphore.prototype.semFlush = function semFlush() {\n    if (this.destroyed) {\n        return false;\n    }\n\n    this._numTokens = 0;\n    this._queue.forEach(group => {\n        group.stack.forEach(item => {\n            item.num = 0;\n        });\n    });\n    this._semTake();\n    return true;\n};\n\nSemaphore.prototype.handleTimeout = function handleTimeout(item) {\n    const {onTimeOut, taken} = item;\n    this._removeItem(item);\n\n    if (taken !== 0) {\n        // give on next tick to wait for all synchronous canceled to be done\n        this._setImmediate(() => {\n            this.semGive(taken, true);\n        });\n    }\n\n    if (typeof onTimeOut === \"function\") {\n        onTimeOut();\n    }\n};\n\n/**\n * Wait for Semaphore availability before calling onTake callback\n * @example\n * semTake(Function[, takeInstance]);\n * semTake(Settings[, takeInstance]);\n *\n * @param {Object} options options with the following properties:\n * <ul>\n * <li>{Function} <b><em>onTake</em></b></li>: called on successful take\n * <li>{Integer} <b><em>num</em></b></li>(optional, default = 1): Number of tokens to take before calling onTake callback\n * <li>{Integer} <b><em>priority</em></b></li>(optional): task priority, smaller is higher priority\n * <li>{Number} <b><em>timeOut</em></b></li>(optional): milliseconds to wait before timeOut. If !(options['timeOut'] > 0), waiting will last forever\n * <li>{Function} <b><em>onTimeOut</em></b></li>(optional): called if timeOut occurs\n * </ul>\n * @return {Object|false} item item.addCounter(n = 1) => wait for n more tokens\n */\nSemaphore.prototype.semTake = function semTake(options, result) {\n    if (this.destroyed) {\n        return false;\n    }\n\n    const hasOptions = isObject(options);\n    let task, timeOut, num, priority;\n\n    if (hasOptions) {\n        task = options.onTake;\n        priority = options.priority;\n        num = options.num;\n        timeOut = options.timeOut;\n    } else if (typeof options === \"function\") {\n        task = options;\n        options = null;\n    }\n\n    if (typeof task !== \"function\") {\n        task = Function.prototype;\n    }\n\n    num = toInteger(num, true, 1);\n    priority = toInteger(priority, false, this.priority);\n\n    const item = new Inwaiting(this, task, priority, num, hasOptions ? options : false);\n\n    if (typeof result === \"function\") {\n        result(item);\n    } else if (isObject(result)) {\n        result.addCounter = item.addCounter.bind(item);\n        result.cancel = item.cancel.bind(item);\n        result.setPriority = item.setPriority.bind(item);\n    }\n\n    this._insertItem(item);\n\n    if (isNumeric(timeOut) && timeOut > 0) {\n        item.timer = setTimeout(this.handleTimeout.bind(this, item), timeOut);\n    }\n\n    this._semTake();\n    return item;\n};\n\nSemaphore.prototype._shouldTakeToken = function _shouldTakeToken(item, num) {\n    // avoid giving item as context when calling shouldTakeToken\n    return typeof item.shouldTakeToken !== \"function\" || (0, item.shouldTakeToken)(num, item.num, item.taken, this);\n};\n\nSemaphore.prototype._hasMissingToken = function _hasMissingToken(item) {\n    if (typeof item.hasMissingToken === \"function\") {\n        // avoid giving item as context when calling hasMissingToken\n        (0, item.hasMissingToken)(this);\n    }\n};\n\nSemaphore.prototype._nextGroupItem = function _nextGroupItem() {\n    let groupIterator, group, itemIterator, item;\n\n    groupIterator = this._queue.beginIterator();\n    group = groupIterator.value();\n\n    itemIterator = group.stack.beginIterator();\n    item = itemIterator.value();\n\n    while (item && item.num !== 0 && !this._shouldTakeToken(item, Math.min(item.num, this._numTokens))) {\n        item = null;\n\n        itemIterator = itemIterator.next();\n\n        if (itemIterator === null) {\n            groupIterator = groupIterator.next();\n\n            if (groupIterator === null) {\n                group = null;\n                break;\n            }\n\n            itemIterator = group.stack.beginIterator();\n        }\n\n        item = itemIterator.value();\n    }\n\n    return [group, item];\n};\n\n/**\n * Take tokens if available\n *\n */\nSemaphore.prototype._semTake = function _semTake(topSync) {\n    if (this._taking) {\n        return;\n    }\n\n    if (typeof this.keepAlive === \"undefined\") {\n        this._keepAlive();\n    }\n\n    this._taking = true;\n    while (this._checkKeepAlive(this._destroyWaiting)) {\n        const [group, item] = this._nextGroupItem();\n        if (item == null) {\n            break;\n        }\n\n        let weakerIterator, weakeGroup, weakerItemIterator, weakerItem;\n\n        // if item is still waiting for tokens\n        if (item.num > this._numTokens) {\n            item.taken += this._numTokens;\n            item.num -= this._numTokens;\n            this._numTokens = 0;\n\n            // take token from tasks with weaker priority\n            if (item.unfair && this._queue.length !== 1) {\n                weakerIterator = this._queue.endIterator().previous();\n\n                while (weakerIterator && item.num !== 0) {\n                    weakeGroup = weakerIterator.value();\n                    if (weakeGroup === group || weakeGroup.priority <= this.priority) {\n                        // can only be unfair on tasks with lower priority that semaphore default priority\n                        break;\n                    }\n\n                    weakerItemIterator = weakeGroup.stack.endIterator().previous();\n                    weakerItem = weakerItemIterator ? weakerItemIterator.value() : null;\n\n                    while (weakerItem && item.num !== 0) {\n                        if (weakerItem.taken > 0 && this._shouldTakeToken(item, Math.min(item.num, weakerItem.taken))) {\n                            const taken = item.num > weakerItem.taken ? weakerItem.taken : item.num;\n                            item.taken += taken;\n                            item.num -= taken;\n                            weakerItem.num += taken;\n                            weakerItem.taken -= taken;\n                        }\n\n                        weakerItemIterator = weakerItemIterator.previous();\n                        weakerItem = weakerItemIterator ? weakerItemIterator.value() : null;\n                    }\n\n                    if (item.num === 0) {\n                        break;\n                    }\n\n                    weakerIterator = weakerIterator ? weakerIterator.previous() : null;\n                }\n            }\n\n            // if item is still waiting for tokens, try again at next give or flush\n            if (item.num !== 0) {\n                this._hasMissingToken(item);\n                break;\n            }\n        }\n\n        if (item.num !== 0) {\n            item.taken += item.num;\n            if (this._numTokens !== Number.POSITIVE_INFINITY) {\n                this._numTokens -= item.num;\n            }\n            item.num = 0;\n        }\n\n        this._runTask(item, topSync);\n    }\n    this._taking = false;\n};\n\nSemaphore.prototype._runTask = function(item, topSync) {\n    const sync = typeof topSync !== \"undefined\" ? topSync : typeof item.sync !== \"undefined\" ? item.sync : this.sync;\n    const {taken, task, onCancel, hasNext} = item;\n\n    if (sync) {\n        if (!hasNext || typeof hasNext !== \"function\" || !hasNext.call(item)) {\n            this._removeItem(item);\n        }\n        task();\n        return;\n    }\n\n    // Non blocking call of callback\n    // A way to loop through in waiting tasks without blocking\n    // the semaphore process until done\n    let timerID = this._setImmediate(() => {\n        timerID = null;\n        task();\n    });\n\n    item.cancel = () => {\n        // Prevent usage of cancel\n        item.cancel = undefined;\n\n        this._clearImmediate(timerID);\n        timerID = null;\n\n        // give on next tick to wait for all synchronous canceled to be done\n        this._setImmediate(() => {\n            this.semGive(taken, true);\n        });\n\n        if (typeof onCancel === \"function\") {\n            onCancel();\n        }\n    };\n\n    // call hasNext after cancel is set to allow hasNext\n    if (!hasNext || typeof hasNext !== \"function\" || !hasNext.call(item)) {\n        this._removeItem(item);\n    }\n};\n\n/**\n * Destroy all inwaiting tasks\n * @param  {Boolean} safe if true, wait for all inwaiting tasks to be performed, else, destroy with no warn\n */\nSemaphore.prototype.destroy = function(safe, onDestroy) {\n    if (this._destroying) {\n        return false;\n    }\n\n    this._destroying = true;\n    this.__onDestroy = onDestroy;\n\n    if (safe !== false) {\n        this._destroyWaiting = true;\n        this._semTake();\n        return true;\n    }\n\n    return this._destroy(safe);\n};\n\nSemaphore.prototype._destroy = function(safe) {\n    this._destroyWaiting = false;\n\n    let i, _len, j, _jlen;\n\n    // for loop to avoid infinite loop with while\n    for (i = 0, _len = this._queue.length; i < _len; i++) {\n        const group = this._queue.beginIterator().value();\n\n        for (j = 0, _jlen = group.stack.length; j < _jlen; j++) {\n            const item = group.stack.beginIterator().value();\n            if (safe !== false) {\n                item.cancel();\n            }\n            this._removeItem(item);\n        }\n    }\n\n    if (this._checkKeepAlive()) {\n        return false;\n    }\n\n    const __onDestroy = this.__onDestroy;\n\n    this.destroyed = true;\n    if (\"function\" === typeof __onDestroy) {\n        __onDestroy();\n    }\n    return true;\n};\n\nSemaphore.prototype.schedule = function(collection, priority, iteratee, callback) {\n    switch (arguments.length) {\n        case 2:\n            if (typeof priority === \"function\") {\n                callback = priority;\n                priority = null;\n            }\n            break;\n        case 3:\n            callback = iteratee;\n            iteratee = null;\n\n            if (\"function\" === typeof priority) {\n                iteratee = priority;\n                priority = null;\n            }\n            break;\n        default:\n            // Nothing to do\n    }\n\n    if (callback == null) {\n        callback = Function.prototype;\n    }\n\n    const iterator = createIterator(collection);\n    if (iterator === null) {\n        callback();\n        return null;\n    }\n\n    const cancellers = [];\n    const errors = [];\n    const items = [];\n    let item;\n    let waiting = 0;\n    let canceled = false;\n    let done = false;\n\n    const hasNext = () => {\n        if (done) {\n            return false;\n        }\n\n        const nextItem = iterator();\n\n        if (nextItem === null) {\n            done = true;\n            return false;\n        }\n\n        items.push(nextItem);\n        cancellers.push(item.cancel);\n        delete item.cancel;\n\n        waiting++;\n        item.num = 1; // tell _semTake that we still need tokens\n        item.taken = 0; // reset taken to prevent unfair taken of this item\n\n        return true;\n    };\n\n    const onTake = () => {\n        if (items.length === item.scheduled) {\n            this.semGive();\n            return;\n        }\n\n        const i = item.scheduled;\n        const nextItem = items[i];\n        cancellers[i] = null;\n        item.scheduled++;\n\n        const give = err => {\n            cancellers[i] = undefined;\n\n            if (err) {\n                errors[i] = err;\n            }\n\n            waiting--;\n            this.semGive();\n\n            if (!canceled && waiting === 0) {\n                callback(errors.length === 0 ? undefined : errors);\n            }\n        };\n\n        const {key, value} = nextItem;\n        const icancel = typeof iteratee === \"function\" ? iteratee(value, key, give) : value(give);\n\n        if (cancellers[i] !== undefined && icancel) {\n            cancellers[i] = () => {\n                cancellers[i] = null;\n\n                if (typeof icancel === \"function\") {\n                    icancel();\n                } else if (typeof icancel === \"object\") {\n                    if (typeof icancel.cancel === \"function\") {\n                        icancel.cancel();\n                    } else if (typeof icancel.abort === \"function\") {\n                        icancel.abort();\n                    }\n                }\n            };\n        }\n    };\n\n    const onCancel = () => {\n        canceled = true;\n\n        this._removeItem(item); // remove item since there is no more token needed and _semTake will not remove it\n\n        cancellers.forEach(cancel => {\n            if (typeof cancel === \"function\") {\n                cancel();\n            }\n        });\n\n        const err = new Error(\"canceled\");\n        err.code = \"CANCELED\";\n        callback(err);\n    };\n\n    item = this.semTake({\n        priority,\n        onTake,\n        hasNext,\n    }, _item => {\n        item = _item;\n        item.scheduled = 0;\n    });\n\n    if (!item.cancel) {\n        return item;\n    }\n\n    return new Proxy(item, {\n        get(target, prop, receiver) {\n            if (prop === \"cancel\") {\n                return canceled ? undefined : onCancel;\n            }\n\n            if (prop === \"setPriority\") {\n                return target.setPriority.bind(target);\n            }\n\n            if (prop === \"scheduled\") {\n                return Reflect.get(...arguments);\n            }\n\n            return undefined;\n        }\n    });\n};\n\nSemaphore.prototype._insertItem = function(item) {\n    let group = this._queue.get({\n        priority: item.priority\n    });\n    if (!group) {\n        group = this._insertGroup(item);\n    }\n    group.stack.insert(item);\n    item.group = group;\n};\n\nSemaphore.prototype._checkKeepAlive = function _checkKeepAlive(_destroyWaiting) {\n    if (this._hasInWaitingTask()) {\n        return true;\n    }\n\n    if (this.keepAlive) {\n        clearTimeout(this.keepAlive);\n        delete this.keepAlive;\n    }\n\n    if (_destroyWaiting) {\n        this._destroy();\n    }\n\n    return false;\n};\n\nSemaphore.prototype.isAlive = function isAlive() {\n    return Boolean(this.keepAlive);\n};\n\nSemaphore.prototype.hasInWaitingTask = function hasInWaitingTask() {\n    return hasProp.call(this, \"_queue\") && this._hasInWaitingTask();\n};\n\nSemaphore.prototype._countInWaitingTokens = function _countInWaitingTokens() {\n    let count = 0;\n\n    if (!this.hasInWaitingTask()) {\n        return count;\n    }\n\n    let iterator = this._queue.beginIterator();\n\n    let group, itemIterator, item;\n    while (iterator) {\n        group = iterator.value();\n\n        if (group != null && group.stack.length !== 0) {\n            itemIterator = group.stack.beginIterator();\n\n            while (itemIterator) {\n                item = itemIterator.value();\n                if (item != null) {\n                    count += item.num;\n                }\n                itemIterator = itemIterator.next();\n            }\n        }\n\n        iterator = iterator.next();\n    }\n\n    return count;\n};\n\nSemaphore.prototype._hasInWaitingTask = function _hasInWaitingTask() {\n    return this._queue.length !== 0;\n};\n\nSemaphore.prototype._keepAlive = function _keepAlive() {\n    if (!this._hasInWaitingTask()) {\n        return;\n    }\n    const _this = this;\n    this.keepAlive = setTimeout(() => {\n        _this._keepAlive();\n    }, 1000);\n};\n\n/**\n * Remove item from a priority group\n *\n */\nSemaphore.prototype._removeItem = function _removeItem(item) {\n    if (item.timer) {\n        clearTimeout(item.timer);\n    }\n\n    item.group.stack.remove(item);\n\n    if (item.group.stack.length === 0) {\n        // No more inWaiting for this priority group\n        this._queue.remove(item.group);\n\n        this._checkKeepAlive();\n    }\n\n    item.destroy();\n};\n\nSemaphore.prototype._insertGroup = function _insertGroup(item) {\n    const stack = new SortedSet({\n        comparator: idComparator,\n        strategy: RedBlackTreeStrategy,\n        allowNode: true\n    });\n\n    const group = {\n        priority: item.priority,\n        stack\n    };\n    this._queue.insert(group);\n    return group;\n};\n\nSemaphore.prototype._setImmediate = (() => {\n    if (typeof global === \"object\" && typeof global.setImmediate === \"function\") {\n        return global.setImmediate;\n    }\n\n    return fn => {\n        return setTimeout(fn, 1);\n    };\n})();\n\nSemaphore.prototype._clearImmediate = (() => {\n    if (typeof global === \"object\" && typeof global.clearImmediate === \"function\") {\n        return global.clearImmediate;\n    }\n\n    return id => {\n        clearTimeout(id);\n    };\n})();\n\nObject.assign(exports, {\n    semCreate: (...args) => {\n        return new Semaphore(...args);\n    },\n    Semaphore,\n    Inwaiting\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sem-lib.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/global.js","module.exports = class AbstractSortedSet {\n    constructor(options) {\n        if (options === null || typeof options !== \"object\" || typeof options.strategy !== \"function\") {\n            throw new Error(\"Must pass options.strategy, a strategy\");\n        }\n        if (options === null || typeof options !== \"object\" || typeof options.comparator !== \"function\") {\n            throw new Error(\"Must pass options.comparator, a comparator\");\n        }\n        this.priv = new options.strategy(options);\n        this.length = 0;\n    }\n\n    insert(value) {\n        this.priv.insert(value);\n        this.length += 1;\n        return this;\n    }\n\n    remove(value) {\n        this.priv.remove(value);\n        this.length -= 1;\n        return this;\n    }\n\n    contains(value) {\n        return this.priv.contains(value);\n    }\n\n    // Returns this set as an Array\n    toArray() {\n        return this.priv.toArray();\n    }\n\n    forEach(callback, thisArg) {\n        this.priv.forEachImpl(callback, this, thisArg);\n    }\n\n    map(callback, thisArg) {\n        const ret = [];\n        this.priv.forEachImpl((value, index, self) => {\n            ret.push(callback.call(thisArg, value, index, self));\n        }, this, thisArg);\n        return ret;\n    }\n\n    filter(callback, thisArg) {\n        const ret = [];\n        this.priv.forEachImpl((value, index, self) => {\n            if (callback.call(thisArg, value, index, self)) {\n                ret.push(value);\n            }\n        }, this, thisArg);\n        return ret;\n    }\n\n    every(callback, thisArg) {\n        let ret = true;\n        this.priv.forEachImpl((value, index, self) => {\n            if (!callback.call(thisArg, value, index, self)) {\n                ret = false;\n            }\n            return !ret;\n        }, this, thisArg, true);\n        return ret;\n    }\n\n    some(callback, thisArg) {\n        let ret = false;\n        this.priv.forEachImpl((value, index, self) => {\n            if (callback.call(thisArg, value, index, self)) {\n                ret = true;\n            }\n            return ret;\n        }, this, thisArg);\n        return ret;\n    }\n\n    // An iterator is similar to a C++ iterator: it points _before_ a value.\n\n    // So in this sorted set:\n\n    //   | 1 | 2 | 3 | 4 | 5 |\n    //   ^a      ^b          ^c\n\n    // `a` is a pointer to the beginning of the iterator. `a.value()` returns\n    // `3`. `a.previous()` returns `null`. `a.setValue()` works, if\n    // `options.allowSetValue` is true.\n\n    // `b` is a pointer to the value `3`. `a.previous()` and `a.next()` both do\n    // the obvious.\n\n    // `c` is a pointer to the `null` value. `c.previous()` works; `c.next()`\n    // returns null. `c.setValue()` throws an exception, even if\n    // `options.allowSetValue` is true.\n\n    // Iterators have `hasNext()` and `hasPrevious()` methods, too.\n\n    // Iterators are immutible. `iterator.next()` returns a new iterator.\n\n    // Iterators become invalid as soon as `insert()` or `remove()` is called.\n    findIterator(value) {\n        return this.priv.findIterator(value);\n    }\n\n    // Finds an iterator pointing to the lowest possible value.\n    beginIterator() {\n        return this.priv.beginIterator();\n    }\n\n    // Finds an iterator pointing to the `null` value.\n    endIterator() {\n        return this.priv.endIterator();\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/SortedSet/AbstractSortedSet.js","const AbstractBinaryTreeStrategy = require(\"./AbstractBinaryTreeStrategy\");\nconst RedBlackTreeNode = require(\"./RedBlackTreeNode\");\n\n// An implementation of Left-Leaning Red-Black trees.\n\n// It's copied from http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf.\n// It's practically a copy-paste job, minus the semicolons. missing bits were\n// filled in with hints from\n// https://www.teachsolaisgames.com/articles/balanced_left_leaning.html\n\nconst rotateLeft = node => {\n    const tmp = node.right;\n    tmp.parent = null;\n\n    node.right = tmp.left;\n    if (node.right !== null) {\n        node.right.parent = node;\n    }\n\n    tmp.left = node;\n    if (tmp.left !== null) {\n        tmp.left.parent = tmp;\n    }\n    tmp.isRed = node.isRed;\n    node.isRed = true;\n    return tmp;\n};\n\nconst rotateRight = node => {\n    const tmp = node.left;\n    tmp.parent = null;\n\n    node.left = tmp.right;\n    if (node.left !== null) {\n        node.left.parent = node;\n    }\n\n    tmp.right = node;\n    if (tmp.right !== null) {\n        tmp.right.parent = tmp;\n    }\n\n    tmp.isRed = node.isRed;\n    node.isRed = true;\n    return tmp;\n};\n\nconst colorFlip = node => {\n    node.isRed = !node.isRed;\n    node.left.isRed = !node.left.isRed;\n    node.right.isRed = !node.right.isRed;\n};\n\nconst moveRedLeft = node => {\n    //throw 'Preconditions failed' if !(!node.left.isRed && !node.left.left?.isRed)\n    colorFlip(node);\n    if (node.right !== null && node.right.left !== null && node.right.left.isRed) {\n        node.right = rotateRight(node.right);\n        node.right.parent = node;\n        node = rotateLeft(node);\n        colorFlip(node);\n    }\n    return node;\n};\n\nconst moveRedRight = node => {\n    //throw 'Preconditions failed' if !(!node.right.isRed && !node.right.left?.isRed)\n    colorFlip(node);\n    if (node.left !== null && node.left.left !== null && node.left.left.isRed) {\n        node = rotateRight(node);\n        colorFlip(node);\n    }\n    return node;\n};\n\nconst insertInNode = (node, value, compare, allowNode, parent) => {\n    if (node === null) {\n        if (allowNode && value instanceof RedBlackTreeNode) {\n            if (!value.isRed) {\n                value.isRed = true;\n            }\n            return value;\n        }\n        return new RedBlackTreeNode(value);\n    }\n\n    //if node.left isnt null && node.left.isRed && node.right isnt null && node.right.isRed\n    //  colorFlip(node)\n    if (node.value === value) {\n        throw new Error(\"Value already in set\");\n    }\n\n    if (compare(value, node.value) < 0) {\n        node.left = insertInNode(node.left, value, compare, allowNode, node);\n        node.left.parent = node;\n    } else {\n        node.right = insertInNode(node.right, value, compare, allowNode, node);\n        node.right.parent = node;\n    }\n\n    if (node.right !== null && node.right.isRed && !(node.left !== null && node.left.isRed)) {\n        node = rotateLeft(node);\n    }\n\n    if (node.left !== null && node.left.isRed && node.left.left !== null && node.left.left.isRed) {\n        node = rotateRight(node);\n    }\n\n    // Put this here -- I couldn't get the whole thing to work otherwise :(\n    if (node.left !== null && node.left.isRed && node.right !== null && node.right.isRed) {\n        colorFlip(node);\n    }\n\n    return node;\n};\n\nconst findMinNode = node => {\n    while (node.left !== null) {\n        node = node.left;\n    }\n    return node;\n};\n\nconst fixUp = node => {\n    // Fix right-leaning red nodes\n    if (node.right !== null && node.right.isRed) {\n        node = rotateLeft(node);\n    }\n\n    // Handle a 4-node that traverses down the left\n    if (node.left !== null && node.left.isRed && node.left.left !== null && node.left.left.isRed) {\n        node = rotateRight(node);\n    }\n\n    // split 4-nodes\n    if (node.left !== null && node.left.isRed && node.right !== null && node.right.isRed) {\n        colorFlip(node);\n    }\n\n    return node;\n};\n\nconst removeMinNode = node => {\n    if (node.left === null) {\n        return null;\n    }\n    if (!node.left.isRed && !(node.left.left !== null && node.left.left.isRed)) {\n        node = moveRedLeft(node);\n    }\n    node.left = removeMinNode(node.left);\n    if (node.left !== null) {\n        node.left.parent = node;\n    }\n    return fixUp(node);\n};\n\n// // const removeMinNodeStack = new Array(1024);\n// const removeMinNode = node => {\n//     let pos = 0;\n//     const removeMinNodeStack = [];\n//     removeMinNodeStack[pos++] = node;\n//     removeMinNodeStack[pos++] = 0;\n//     // let stackSize = pos;\n//     let ret;\n\n//     while (pos !== 0) {\n//         // if (pos > stackSize) {\n//         //     stackSize = pos;\n//         // }\n//         if (removeMinNodeStack[--pos] === 0) {\n//             node = removeMinNodeStack[--pos];\n\n//             if (node.left === null) {\n//                 ret = null;\n//                 continue;\n//             }\n\n//             if (!node.left.isRed && !(node.left.left !== null && node.left.left.isRed)) {\n//                 node = moveRedLeft(node);\n//             }\n\n//             removeMinNodeStack[pos++] = node;\n//             removeMinNodeStack[pos++] = 1;\n//             removeMinNodeStack[pos++] = node.left;\n//             removeMinNodeStack[pos++] = 0;\n//         } else {\n//             node = removeMinNodeStack[--pos];\n//             node.left = ret;\n//             if (node.left !== null) {\n//                 node.left.parent = node;\n//             }\n//             ret = fixUp(node);\n//         }\n//     }\n\n//     // for (let i = 0; i < stackSize; i++) {\n//     //     removeMinNodeStack[i] = undefined;\n//     // }\n\n//     return ret;\n// };\n\nconst removeFromNode = (node, value, compare, allowNode) => {\n    if (node === null) {\n        throw new Error(\"Value not in set\");\n    }\n\n    if (node.value !== value && compare(value, node.value) < 0) {\n        if (node.left === null) {\n            throw new Error(\"Value not in set\");\n        }\n \n        if (!node.left.isRed && !(node.left.left !== null && node.left.left.isRed)) {\n            node = moveRedLeft(node);\n        }\n \n        node.left = removeFromNode(node.left, value, compare, allowNode);\n        if (node.left !== null) {\n            node.left.parent = node;\n        }\n    } else {\n        if (node.left !== null && node.left.isRed) {\n            node = rotateRight(node);\n        }\n        if (node.right === null) {\n            if (value === node.value) {\n                return null; // leaf node; LLRB assures no left value here\n            }\n            throw new Error(\"Value not in set\");\n        }\n        if (!node.right.isRed && !(node.right.left !== null && node.right.left.isRed)) {\n            node = moveRedRight(node);\n        }\n        if (value === node.value) {\n            value = findMinNode(node.right).value;\n            const right = removeMinNode(node.right);\n\n            if (allowNode && value instanceof RedBlackTreeNode) {\n                value.left = node.left;\n                if (value.left !== null) {\n                    value.left.parent = value;\n                }\n                value.parent = node.parent;\n                value.isRed = node.isRed;\n                node = value;\n            }\n\n            node.value = value;\n            node.right = right;\n        } else {\n            node.right = removeFromNode(node.right, value, compare, allowNode);\n        }\n\n        if (node.right !== null) {\n            node.right.parent = node;\n        }\n    }\n\n    return fixUp(node);\n};\n\n// // const removeFromNodeStask = new Array(1024);\n// const removeFromNode = (node, value, compare, allowNode) => {\n//     let pos = 0;\n//     const removeFromNodeStask = [];\n//     removeFromNodeStask[pos++] = node;\n//     removeFromNodeStask[pos++] = 0;\n//     // let stackSize = pos;\n//     let ret, cmd;\n\n//     while (pos !== 0) {\n//         // if (pos > stackSize) {\n//         //     stackSize = pos;\n//         // }\n//         cmd = removeFromNodeStask[--pos];\n\n//         // eslint-disable-next-line default-case\n//         switch(cmd) {\n//             case 0:\n//                 node = removeFromNodeStask[--pos];\n\n//                 if (node === null) {\n//                     throw new Error(\"Value not in set\");\n//                 }\n\n//                 if (node.value !== value && compare(value, node.value) < 0) {\n//                     if (node.left === null) {\n//                         throw new Error(\"Value not in set\");\n//                     }\n//                     if (!node.left.isRed && !(node.left.left !== null && node.left.left.isRed)) {\n//                         node = moveRedLeft(node);\n//                     }\n//                     removeFromNodeStask[pos++] = node;\n//                     removeFromNodeStask[pos++] = 1;\n//                     removeFromNodeStask[pos++] = node.left;\n//                     removeFromNodeStask[pos++] = 0;\n//                     break;\n//                 }\n\n//                 if (node.left !== null && node.left.isRed) {\n//                     node = rotateRight(node);\n//                 }\n\n//                 if (node.right === null) {\n//                     if (value === node.value) {\n//                         ret = null; // leaf node; LLRB assures no left value here\n//                         break;\n//                     }\n//                     throw new Error(\"Value not in set\");\n//                 }\n\n//                 if (!node.right.isRed && !(node.right.left !== null && node.right.left.isRed)) {\n//                     node = moveRedRight(node);\n//                 }\n\n//                 if (value === node.value) {\n//                     value = findMinNode(node.right).value;\n//                     const right = removeMinNode(node.right);\n\n//                     if (allowNode && value instanceof RedBlackTreeNode) {\n//                         value.left = node.left;\n//                         if (value.left !== null) {\n//                             value.left.parent = value;\n//                         }\n//                         value.parent = node.parent;\n//                         value.isRed = node.isRed;\n//                         node = value;\n//                     }\n\n//                     node.value = value;\n//                     node.right = right;\n\n//                     if (node.right !== null) {\n//                         node.right.parent = node;\n//                     }\n//                     ret = fixUp(node);\n//                     break;\n//                 }\n\n//                 removeFromNodeStask[pos++] = node;\n//                 removeFromNodeStask[pos++] = 2;\n//                 removeFromNodeStask[pos++] = node.right;\n//                 removeFromNodeStask[pos++] = 0;\n//                 break;\n//             case 1:\n//                 node = removeFromNodeStask[--pos];\n//                 node.left = ret;\n//                 if (node.left !== null) {\n//                     node.left.parent = node;\n//                 }\n//                 ret = fixUp(node);\n//                 break;\n//             case 2:\n//                 node = removeFromNodeStask[--pos];\n//                 node.right = ret;\n//                 if (node.right !== null) {\n//                     node.right.parent = node;\n//                 }\n//                 ret = fixUp(node);\n//                 break;\n//         }\n//     }\n\n//     // for (let i = 0; i < stackSize; i++) {\n//     //     removeFromNodeStask[i] = undefined;\n//     // }\n\n//     return ret;\n// };\n\nmodule.exports = class RedBlackTreeStrategy extends AbstractBinaryTreeStrategy {\n    insert(value) {\n        this.root = insertInNode(this.root, value, this.comparator, this.allowNode);\n        this.root.parent = null;\n        this.root.isRed = false;\n    }\n\n    remove(value) {\n        this.root = removeFromNode(this.root, value, this.comparator, this.allowNode);\n        if (this.root !== null) {\n            this.root.parent = null;\n            this.root.isRed = false;\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/SortedSet/RedBlackTreeStrategy.js","const BinaryTreeIterator = require(\"./BinaryTreeIterator\");\n\n// const binaryTreeTraverse = (node, callback, some) => {\n//     if (node === null) {\n//         return false;\n//     }\n\n//     let ret;\n\n//     ret = binaryTreeTraverse(node.left, callback, some);\n//     if (some && ret) {\n//         return true;\n//     }\n\n//     ret = callback(node.value);\n//     if (some && ret) {\n//         return true;\n//     }\n\n//     ret = binaryTreeTraverse(node.right, callback, some);\n//     if (some && ret) {\n//         return true;\n//     }\n\n//     return false;\n// };\n\n// Not subject to stackoverflow\nconst binaryTreeTraverse = (node, callback, some) => {\n    if (node === null) {\n        return;\n    }\n\n    const stack = [1, node.right, 0, node.value, 1, node.left];\n    let pos = stack.length;\n    let ret;\n\n    while (pos !== 0) {\n        pos -= 2;\n        node = stack[pos + 1];\n        if (stack[pos] === 0) {\n            ret = callback(node);\n            if (some && ret) {\n                break;\n            }\n        } else if (node !== null) {\n            stack[pos++] = 1;\n            stack[pos++] = node.right;\n            stack[pos++] = 0;\n            stack[pos++] = node.value;\n            stack[pos++] = -1;\n            stack[pos++] = node.left;\n        }\n    }\n};\n\n// An AbstractBinaryTreeStrategy has a @root. @root is null or an object with\n// `.left`, `.right` and `.value` properties.\nmodule.exports = class AbstractBinaryTreeStrategy {\n    constructor(options) {\n        this.root = null;\n        this.comparator = options.comparator;\n        this.allowSetValue = options.allowSetValue;\n        this.allowNode = options.allowNode;\n    }\n\n    toArray() {\n        const ret = [];\n        binaryTreeTraverse(this.root, value => {\n            ret.push(value);\n        });\n        return ret;\n    }\n\n    forEachImpl(callback, sortedSet, thisArg, some) {\n        if (typeof thisArg === \"undefined\") {\n            thisArg = sortedSet;\n        }\n        let i = 0;\n        binaryTreeTraverse(this.root, value => {\n            return callback.call(thisArg, value, i++, sortedSet);\n        }, some);\n    }\n\n    contains(value) {\n        const {comparator} = this;\n        let {root: node} = this;\n        let cmp;\n\n        while (node !== null) {\n            cmp = comparator(value, node.value);\n            if (cmp === 0) {\n                break;\n            } else if (cmp < 0) {\n                node = node.left;\n            } else {\n                node = node.right;\n            }\n        }\n\n        return node !== null && node.value === value;\n    }\n\n    findIterator(value) {\n        return BinaryTreeIterator.find(this, value, this.comparator);\n    }\n\n    beginIterator() {\n        return BinaryTreeIterator.left(this);\n    }\n\n    endIterator() {\n        return BinaryTreeIterator.right(this);\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/SortedSet/AbstractBinaryTreeStrategy.js","const descendAllTheWay = (leftOrRight, node) => {\n    while (node[leftOrRight] !== null) {\n        node = node[leftOrRight];\n    }\n    return node;\n};\n\nconst moveCursor = (leftOrRight, node) => {\n    let parent, rightOrLeft;\n    if (node[leftOrRight] !== null) {\n        parent = node;\n        node = node[leftOrRight];\n        rightOrLeft = leftOrRight === \"left\" ? \"right\" : \"left\";\n        node = descendAllTheWay(rightOrLeft, node);\n    } else {\n        while ((parent = node.parent) !== null && parent[leftOrRight] === node) {\n            node = parent;\n        }\n        node = parent; // either null or the correct-direction parent\n    }\n    return node;\n};\n\n// The BinaryTreeIterator actually writes to the tree: it maintains a\n// \"parent\" variable on each node. Please ignore this.\nclass BinaryTreeIterator {\n    constructor(tree, node) {\n        this.tree = tree;\n        this.node = node;\n    }\n\n    next() {\n        if (this.node === null) {\n            return null;\n        }\n        const node = moveCursor(\"right\", this.node);\n        return node === null ? null : new BinaryTreeIterator(this.tree, node);\n    }\n\n    previous() {\n        if (this.node === null) {\n            if (this.tree.root === null) {\n                return null;\n            }\n\n            const node = descendAllTheWay(\"right\", this.tree.root);\n            return node === null ? null : new BinaryTreeIterator(this.tree, node);\n        }\n\n        const node = moveCursor(\"left\", this.node);\n        return node === null ? null : new BinaryTreeIterator(this.tree, node);\n    }\n\n    hasNext() {\n        return this.next() !== null;\n    }\n\n    hasPrevious() {\n        return this.previous() !== null;\n    }\n\n    value() {\n        return this.node === null ? null : this.node.value;\n    }\n\n    setValue(value) {\n        if (!this.tree.allowSetValue) {\n            throw new Error(\"Must set options.allowSetValue\");\n        }\n        if (this.node === null) {\n            throw new Error(\"Cannot set value at end of set\");\n        }\n        this.node.value = value;\n        return value;\n    }\n}\n\nBinaryTreeIterator.find = (tree, value, comparator) => {\n    let {root: node} = tree;\n    let nextNode = null; // For finding an in-between node\n    let cmp;\n\n    while (node !== null) {\n        cmp = comparator(value, node.value);\n        if (cmp === 0) {\n            break;\n        }\n\n        if (cmp < 0) {\n            if (node.left === null) {\n                break;\n            }\n\n            // If we descend all right after this until there are\n            // no more right nodes, we want to return an\n            // \"in-between\" iterator ... pointing here.\n            nextNode = node;\n            node = node.left;\n        } else if (node.right !== null) {\n            node = node.right;\n        } else {\n            node = nextNode;\n            break;\n        }\n    }\n\n    return new BinaryTreeIterator(tree, node);\n};\n\nBinaryTreeIterator.left = tree => {\n    if (tree.root === null) {\n        return new BinaryTreeIterator(tree, null);\n    }\n\n    const node = descendAllTheWay(\"left\", tree.root);\n    return new BinaryTreeIterator(tree, node);\n};\n\nBinaryTreeIterator.right = tree => {\n    return new BinaryTreeIterator(tree, null);\n};\n\nmodule.exports = BinaryTreeIterator;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/SortedSet/BinaryTreeIterator.js","module.exports = class BinaryTreeNode {\n    constructor(value, parent = null) {\n        this.value = value;\n        this.left = null;\n        this.right = null;\n        this.parent = parent;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/SortedSet/BinaryTreeNode.js","const createArrayIterator = arr => {\n    let i = 0;\n    const len = arr.length;\n\n    return function next() {\n        return i < len ? {\n            key: i,\n            value: arr[i++],\n        } : null;\n    };\n};\n\nconst createObjectIterator = obj => {\n    let i = 0;\n    const keys = Object.keys(obj);\n    const len = keys.length;\n\n    return function next() {\n        return i < len ? {\n            key: keys[i],\n            value: obj[keys[i++]]\n        } : null;\n    };\n};\n\nconst createIterableIterator = iterable => {\n    const iterator = iterable[Symbol.iterator]();\n    return function next() {\n        const item = iterator.next();\n        return item === null || typeof item !== \"object\" ? item : item.done ? null : item;\n    };\n};\n\nconst iterator = obj => {\n    if (obj === null || typeof obj !== \"object\") {\n        return null;\n    }\n\n    return Array.isArray(obj) ? createArrayIterator(obj) : Symbol.iterator in obj ? createIterableIterator(obj) : createObjectIterator(obj);\n};\n\nmodule.exports = iterator;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/iterator.js","const RedBlackTreeNode = require(\"./SortedSet/RedBlackTreeNode\");\nconst toInteger = require(\"./toInteger\");\n\nconst hasProp = Object.hasOwnProperty;\n\n// Debugging purpose\nlet globalCounter = 0;\n\nclass Inwaiting extends RedBlackTreeNode {\n    constructor(semID, task, priority, num, options) {\n        super();\n        this.value = this;\n        this.id = ++globalCounter;\n        this.taken = 0;\n        this.task = task;\n        this.priority = priority;\n        this.num = num;\n        this.semaphore = semID;\n\n        if (options) {\n            [\n                \"onTimeOut\",\n                \"onCancel\",\n                \"unfair\",\n                \"shouldTakeToken\",\n                \"hasMissingToken\",\n                \"sync\",\n                \"hasNext\"\n            ].forEach(prop => {\n                if (hasProp.call(options, prop)) {\n                    this[prop] = options[prop];\n                }\n            });\n        }\n    }\n\n    addCounter(nextNum) {\n        this.num += toInteger(nextNum, true, 1);\n    }\n\n    cancel() {\n        const {onCancel, taken, semaphore: semID} = this;\n        semID._removeItem(this);\n\n        if (taken !== 0) {\n            // give on next tick to wait for all synchronous canceled to be done\n            semID._setImmediate(() => {\n                semID.semGive(taken, true);\n            });\n        }\n\n        if (typeof onCancel === \"function\") {\n            onCancel();\n        }\n    }\n\n    setPriority(nextPriority) {\n        if (this.group == null) {\n            return;\n        }\n\n        const {semaphore: semID} = this;\n\n        nextPriority = toInteger(nextPriority, false, semID.priority);\n        if (nextPriority === this.priority) {\n            return;\n        }\n\n        this.group.stack.remove(this);\n        if (this.group.stack.length === 0) {\n            // No more inWaiting for this priority group\n            semID._queue.remove(this.group);\n        }\n\n        this.priority = nextPriority;\n        semID._insertItem(this);\n    }\n\n    destroy() {\n        // Remove properties to allow garbage collection\n        Object.keys(this).forEach(prop => {\n            switch(prop) {\n                case \"cancel\":\n                case \"id\":\n                case \"num\":\n                case \"scheduled\":\n                case \"taken\":\n                    break;\n                default:\n                    delete this[prop];\n            }\n        });\n\n        // Prevent usage of these methods on a destroyed object\n        [\"addCounter\", \"setPriority\", \"destroy\"].forEach(prop => {\n            this[prop] = undefined;\n        });\n\n        this.destroyed = true;\n    }\n}\n\nmodule.exports = Inwaiting;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Inwaiting.js"],"sourceRoot":""}